"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var r=require("@web3-react/abstract-connector"),t=e(require("web3-provider-engine")),n=require("@0x/subproviders/lib/src/subproviders/lattice"),i=e(require("web3-provider-engine/subproviders/cache.js")),o=require("@0x/subproviders/lib/src/subproviders/rpc_subprovider");exports.LatticeConnector=function(e){var r,c;function u(r){var t,n=r.chainId,i=r.url,o=r.pollingInterval,c=r.requestTimeoutMs,u=r.appName;return(t=e.call(this,{supportedChainIds:[n]})||this).chainId=n,t.url=i,t.pollingInterval=o,t.requestTimeoutMs=c,t.appName=u,t}c=e,(r=u).prototype=Object.create(c.prototype),r.prototype.constructor=r,r.__proto__=c;var s=u.prototype;return s.activate=function(){try{var e=function(){return r.provider.start(),{provider:r.provider,chainId:r.chainId}},r=this,c=function(){if(!r.provider)return Promise.resolve(new Promise((function(e){e(function(e){if(e&&e.__esModule)return e;var r={};return e&&Object.keys(e).forEach((function(t){var n=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,n.get?n:{enumerable:!0,get:function(){return e[t]}})})),r.default=e,r}(require("eth-lattice-keyring")))})).then((function(e){var r;return null!=(r=null==e?void 0:e.default)?r:e}))).then((function(e){var c=new t({pollingInterval:r.pollingInterval});c.addProvider(new n.LatticeSubprovider({appName:r.appName,latticeConnectClient:e,networkId:r.chainId})),c.addProvider(new i),c.addProvider(new o.RPCSubprovider(r.url,r.requestTimeoutMs)),r.provider=c}))}();return Promise.resolve(c&&c.then?c.then(e):e())}catch(e){return Promise.reject(e)}},s.getProvider=function(){try{return Promise.resolve(this.provider)}catch(e){return Promise.reject(e)}},s.getChainId=function(){try{return Promise.resolve(this.chainId)}catch(e){return Promise.reject(e)}},s.getAccount=function(){try{return Promise.resolve(this.provider._providers[0].getAccountsAsync(1).then((function(e){return e[0]})))}catch(e){return Promise.reject(e)}},s.deactivate=function(){this.provider.stop()},s.close=function(){try{return this.emitDeactivate(),Promise.resolve(this.provider._providers[0].getAccountsAsync(-1e3).then((function(e){return e[0]})))}catch(e){return Promise.reject(e)}},u}(r.AbstractConnector);
//# sourceMappingURL=lattice-connector.cjs.production.min.js.map
