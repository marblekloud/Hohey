{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst ethUtil = require(\"ethereumjs-util\");\n\nclass CalldataBlock {\n  constructor(name, signature, parentName, headerSizeInBytes, bodySizeInBytes) {\n    this._name = name;\n    this._signature = signature;\n    this._parentName = parentName;\n    this._offsetInBytes = 0;\n    this._headerSizeInBytes = headerSizeInBytes;\n    this._bodySizeInBytes = bodySizeInBytes;\n  }\n\n  _setHeaderSize(headerSizeInBytes) {\n    this._headerSizeInBytes = headerSizeInBytes;\n  }\n\n  _setBodySize(bodySizeInBytes) {\n    this._bodySizeInBytes = bodySizeInBytes;\n  }\n\n  _setName(name) {\n    this._name = name;\n  }\n\n  getName() {\n    return this._name;\n  }\n\n  getParentName() {\n    return this._parentName;\n  }\n\n  getSignature() {\n    return this._signature;\n  }\n\n  getHeaderSizeInBytes() {\n    return this._headerSizeInBytes;\n  }\n\n  getBodySizeInBytes() {\n    return this._bodySizeInBytes;\n  }\n\n  getSizeInBytes() {\n    return this.getHeaderSizeInBytes() + this.getBodySizeInBytes();\n  }\n\n  getOffsetInBytes() {\n    return this._offsetInBytes;\n  }\n\n  setOffset(offsetInBytes) {\n    this._offsetInBytes = offsetInBytes;\n  }\n\n  computeHash() {\n    const rawData = this.getRawData();\n    const hash = ethUtil.sha3(rawData);\n    return hash;\n  }\n\n}\n\nexports.CalldataBlock = CalldataBlock;","map":{"version":3,"sources":["../../../../src/abi_encoder/calldata/calldata_block.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,MAAsB,aAAtB,CAAmC;AAQ/B,EAAA,WAAA,CACI,IADJ,EAEI,SAFJ,EAGI,UAHJ,EAII,iBAJJ,EAKI,eALJ,EAK2B;AAEvB,SAAK,KAAL,GAAa,IAAb;AACA,SAAK,UAAL,GAAkB,SAAlB;AACA,SAAK,WAAL,GAAmB,UAAnB;AACA,SAAK,cAAL,GAAsB,CAAtB;AACA,SAAK,kBAAL,GAA0B,iBAA1B;AACA,SAAK,gBAAL,GAAwB,eAAxB;AACH;;AAES,EAAA,cAAc,CAAC,iBAAD,EAA0B;AAC9C,SAAK,kBAAL,GAA0B,iBAA1B;AACH;;AAES,EAAA,YAAY,CAAC,eAAD,EAAwB;AAC1C,SAAK,gBAAL,GAAwB,eAAxB;AACH;;AAES,EAAA,QAAQ,CAAC,IAAD,EAAa;AAC3B,SAAK,KAAL,GAAa,IAAb;AACH;;AAEM,EAAA,OAAO,GAAA;AACV,WAAO,KAAK,KAAZ;AACH;;AAEM,EAAA,aAAa,GAAA;AAChB,WAAO,KAAK,WAAZ;AACH;;AAEM,EAAA,YAAY,GAAA;AACf,WAAO,KAAK,UAAZ;AACH;;AACM,EAAA,oBAAoB,GAAA;AACvB,WAAO,KAAK,kBAAZ;AACH;;AAEM,EAAA,kBAAkB,GAAA;AACrB,WAAO,KAAK,gBAAZ;AACH;;AAEM,EAAA,cAAc,GAAA;AACjB,WAAO,KAAK,oBAAL,KAA8B,KAAK,kBAAL,EAArC;AACH;;AAEM,EAAA,gBAAgB,GAAA;AACnB,WAAO,KAAK,cAAZ;AACH;;AAEM,EAAA,SAAS,CAAC,aAAD,EAAsB;AAClC,SAAK,cAAL,GAAsB,aAAtB;AACH;;AAEM,EAAA,WAAW,GAAA;AACd,UAAM,OAAO,GAAG,KAAK,UAAL,EAAhB;AACA,UAAM,IAAI,GAAG,OAAO,CAAC,IAAR,CAAa,OAAb,CAAb;AACA,WAAO,IAAP;AACH;;AAtE8B;;AAAnC,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethUtil = require(\"ethereumjs-util\");\nclass CalldataBlock {\n    constructor(name, signature, parentName, headerSizeInBytes, bodySizeInBytes) {\n        this._name = name;\n        this._signature = signature;\n        this._parentName = parentName;\n        this._offsetInBytes = 0;\n        this._headerSizeInBytes = headerSizeInBytes;\n        this._bodySizeInBytes = bodySizeInBytes;\n    }\n    _setHeaderSize(headerSizeInBytes) {\n        this._headerSizeInBytes = headerSizeInBytes;\n    }\n    _setBodySize(bodySizeInBytes) {\n        this._bodySizeInBytes = bodySizeInBytes;\n    }\n    _setName(name) {\n        this._name = name;\n    }\n    getName() {\n        return this._name;\n    }\n    getParentName() {\n        return this._parentName;\n    }\n    getSignature() {\n        return this._signature;\n    }\n    getHeaderSizeInBytes() {\n        return this._headerSizeInBytes;\n    }\n    getBodySizeInBytes() {\n        return this._bodySizeInBytes;\n    }\n    getSizeInBytes() {\n        return this.getHeaderSizeInBytes() + this.getBodySizeInBytes();\n    }\n    getOffsetInBytes() {\n        return this._offsetInBytes;\n    }\n    setOffset(offsetInBytes) {\n        this._offsetInBytes = offsetInBytes;\n    }\n    computeHash() {\n        const rawData = this.getRawData();\n        const hash = ethUtil.sha3(rawData);\n        return hash;\n    }\n}\nexports.CalldataBlock = CalldataBlock;\n//# sourceMappingURL=calldata_block.js.map"]},"metadata":{},"sourceType":"module"}