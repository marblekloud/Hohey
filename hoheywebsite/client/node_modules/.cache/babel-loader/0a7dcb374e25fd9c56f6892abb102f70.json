{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst revert_error_1 = require(\"../../revert_error\"); // tslint:disable:max-classes-per-file\n\n\nclass MigrateCallFailedError extends revert_error_1.RevertError {\n  constructor(target, resultData) {\n    super('MigrateCallFailedError', 'MigrateCallFailedError(address target, bytes resultData)', {\n      target,\n      resultData\n    });\n  }\n\n}\n\nexports.MigrateCallFailedError = MigrateCallFailedError;\n\nclass OnlyOwnerError extends revert_error_1.RevertError {\n  constructor(sender, owner) {\n    super('OnlyOwnerError', 'OnlyOwnerError(address sender, bytes owner)', {\n      sender,\n      owner\n    });\n  }\n\n}\n\nexports.OnlyOwnerError = OnlyOwnerError; // This is identical to the one in utils.\n// export class TransferOwnerToZeroError extends RevertError {\n//     constructor() {\n//         super('TransferOwnerToZeroError', 'TransferOwnerToZeroError()', {});\n//     }\n// }\n\nconst types = [MigrateCallFailedError, OnlyOwnerError]; // Register the types we've defined.\n\nfor (const type of types) {\n  revert_error_1.RevertError.registerType(type);\n}","map":{"version":3,"sources":["../../../../src/revert_errors/zero-ex/ownable_revert_errors.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,cAAA,GAAA,OAAA,CAAA,oBAAA,CAAA,C,CAEA;;;AAEA,MAAa,sBAAb,SAA4C,cAAA,CAAA,WAA5C,CAAuD;AACnD,EAAA,WAAA,CAAY,MAAZ,EAA6B,UAA7B,EAAgD;AAC5C,UAAM,wBAAN,EAAgC,0DAAhC,EAA4F;AACxF,MAAA,MADwF;AAExF,MAAA;AAFwF,KAA5F;AAIH;;AANkD;;AAAvD,OAAA,CAAA,sBAAA,GAAA,sBAAA;;AASA,MAAa,cAAb,SAAoC,cAAA,CAAA,WAApC,CAA+C;AAC3C,EAAA,WAAA,CAAY,MAAZ,EAA6B,KAA7B,EAA2C;AACvC,UAAM,gBAAN,EAAwB,6CAAxB,EAAuE;AACnE,MAAA,MADmE;AAEnE,MAAA;AAFmE,KAAvE;AAIH;;AAN0C;;AAA/C,OAAA,CAAA,cAAA,GAAA,cAAA,C,CASA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,KAAK,GAAG,CAAC,sBAAD,EAAyB,cAAzB,CAAd,C,CAEA;;AACA,KAAK,MAAM,IAAX,IAAmB,KAAnB,EAA0B;AACtB,EAAA,cAAA,CAAA,WAAA,CAAY,YAAZ,CAAyB,IAAzB;AACH","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst revert_error_1 = require(\"../../revert_error\");\n// tslint:disable:max-classes-per-file\nclass MigrateCallFailedError extends revert_error_1.RevertError {\n    constructor(target, resultData) {\n        super('MigrateCallFailedError', 'MigrateCallFailedError(address target, bytes resultData)', {\n            target,\n            resultData,\n        });\n    }\n}\nexports.MigrateCallFailedError = MigrateCallFailedError;\nclass OnlyOwnerError extends revert_error_1.RevertError {\n    constructor(sender, owner) {\n        super('OnlyOwnerError', 'OnlyOwnerError(address sender, bytes owner)', {\n            sender,\n            owner,\n        });\n    }\n}\nexports.OnlyOwnerError = OnlyOwnerError;\n// This is identical to the one in utils.\n// export class TransferOwnerToZeroError extends RevertError {\n//     constructor() {\n//         super('TransferOwnerToZeroError', 'TransferOwnerToZeroError()', {});\n//     }\n// }\nconst types = [MigrateCallFailedError, OnlyOwnerError];\n// Register the types we've defined.\nfor (const type of types) {\n    revert_error_1.RevertError.registerType(type);\n}\n//# sourceMappingURL=ownable_revert_errors.js.map"]},"metadata":{},"sourceType":"module"}