{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst revert_error_1 = require(\"../../revert_error\"); // tslint:disable:max-classes-per-file\n\n\nclass OnlyCallableBySelfError extends revert_error_1.RevertError {\n  constructor(sender) {\n    super('OnlyCallableBySelfError', 'OnlyCallableBySelfError(address sender)', {\n      sender\n    });\n  }\n\n}\n\nexports.OnlyCallableBySelfError = OnlyCallableBySelfError;\n\nclass IllegalReentrancyError extends revert_error_1.RevertError {\n  constructor(selector, reentrancyFlags) {\n    super('IllegalReentrancyError', 'IllegalReentrancyError(bytes4 selector, uint256 reentrancyFlags)', {\n      selector,\n      reentrancyFlags\n    });\n  }\n\n}\n\nexports.IllegalReentrancyError = IllegalReentrancyError;\nconst types = [OnlyCallableBySelfError, IllegalReentrancyError]; // Register the types we've defined.\n\nfor (const type of types) {\n  revert_error_1.RevertError.registerType(type);\n}","map":{"version":3,"sources":["../../../../src/revert_errors/zero-ex/common_revert_errors.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,cAAA,GAAA,OAAA,CAAA,oBAAA,CAAA,C,CAGA;;;AACA,MAAa,uBAAb,SAA6C,cAAA,CAAA,WAA7C,CAAwD;AACpD,EAAA,WAAA,CAAY,MAAZ,EAA2B;AACvB,UAAM,yBAAN,EAAiC,yCAAjC,EAA4E;AACxE,MAAA;AADwE,KAA5E;AAGH;;AALmD;;AAAxD,OAAA,CAAA,uBAAA,GAAA,uBAAA;;AAQA,MAAa,sBAAb,SAA4C,cAAA,CAAA,WAA5C,CAAuD;AACnD,EAAA,WAAA,CAAY,QAAZ,EAA+B,eAA/B,EAA0D;AACtD,UAAM,wBAAN,EAAgC,kEAAhC,EAAoG;AAChG,MAAA,QADgG;AAEhG,MAAA;AAFgG,KAApG;AAIH;;AANkD;;AAAvD,OAAA,CAAA,sBAAA,GAAA,sBAAA;AASA,MAAM,KAAK,GAAG,CAAC,uBAAD,EAA0B,sBAA1B,CAAd,C,CAEA;;AACA,KAAK,MAAM,IAAX,IAAmB,KAAnB,EAA0B;AACtB,EAAA,cAAA,CAAA,WAAA,CAAY,YAAZ,CAAyB,IAAzB;AACH","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst revert_error_1 = require(\"../../revert_error\");\n// tslint:disable:max-classes-per-file\nclass OnlyCallableBySelfError extends revert_error_1.RevertError {\n    constructor(sender) {\n        super('OnlyCallableBySelfError', 'OnlyCallableBySelfError(address sender)', {\n            sender,\n        });\n    }\n}\nexports.OnlyCallableBySelfError = OnlyCallableBySelfError;\nclass IllegalReentrancyError extends revert_error_1.RevertError {\n    constructor(selector, reentrancyFlags) {\n        super('IllegalReentrancyError', 'IllegalReentrancyError(bytes4 selector, uint256 reentrancyFlags)', {\n            selector,\n            reentrancyFlags,\n        });\n    }\n}\nexports.IllegalReentrancyError = IllegalReentrancyError;\nconst types = [OnlyCallableBySelfError, IllegalReentrancyError];\n// Register the types we've defined.\nfor (const type of types) {\n    revert_error_1.RevertError.registerType(type);\n}\n//# sourceMappingURL=common_revert_errors.js.map"]},"metadata":{},"sourceType":"module"}