{"ast":null,"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar chainIdToNetwork = {\n  1: 'mainnet',\n  3: 'ropsten',\n  4: 'rinkeby',\n  5: 'goerli',\n  42: 'kovan'\n};\n\nvar AuthereumConnector = /*#__PURE__*/function (_AbstractConnector) {\n  _inheritsLoose(AuthereumConnector, _AbstractConnector);\n\n  function AuthereumConnector(_ref) {\n    var _this;\n\n    var chainId = _ref.chainId,\n        _ref$config = _ref.config,\n        config = _ref$config === void 0 ? {} : _ref$config;\n    _this = _AbstractConnector.call(this, {\n      supportedChainIds: [chainId]\n    }) || this;\n    _this.chainId = chainId;\n    _this.config = config;\n    return _this;\n  }\n\n  var _proto = AuthereumConnector.prototype;\n\n  _proto.activate = function activate() {\n    try {\n      var _temp3 = function _temp3() {\n        return Promise.resolve(_this3.authereum.getProvider().enable().then(function (accounts) {\n          return accounts[0];\n        })).then(function () {\n          return {\n            provider: _this3.authereum.getProvider()\n          };\n        });\n      };\n\n      var _this3 = this;\n\n      var _temp4 = function () {\n        if (!_this3.authereum) {\n          return Promise.resolve(import('authereum')).then(function (_ref2) {\n            var Authereum = _ref2[\"default\"];\n            _this3.authereum = new Authereum(_extends({\n              networkName: chainIdToNetwork[_this3.chainId]\n            }, _this3.config));\n          });\n        }\n      }();\n\n      return Promise.resolve(_temp4 && _temp4.then ? _temp4.then(_temp3) : _temp3(_temp4));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getProvider = function getProvider() {\n    try {\n      var _this5 = this;\n\n      return Promise.resolve(_this5.authereum.getProvider());\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getChainId = function getChainId() {\n    try {\n      var _this7 = this;\n\n      return Promise.resolve(_this7.authereum.getNetworkId());\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getAccount = function getAccount() {\n    try {\n      var _this9 = this;\n\n      return Promise.resolve(_this9.authereum.getAccountAddress());\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.deactivate = function deactivate() {};\n\n  _proto.close = function close() {\n    try {\n      var _this11 = this;\n\n      _this11.authereum.logout();\n\n      _this11.emitDeactivate();\n\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  return AuthereumConnector;\n}(AbstractConnector);\n\nexport { AuthereumConnector };","map":{"version":3,"sources":["../src/index.ts"],"names":["chainIdToNetwork","AuthereumConnector","chainId","config","supportedChainIds","authereum","Authereum","networkName","accounts","provider","deactivate"],"mappings":"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","sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\nconst chainIdToNetwork: { [network: number]: string } = {\n  1: 'mainnet',\n  3: 'ropsten',\n  4: 'rinkeby',\n  5: 'goerli',\n  42: 'kovan'\n}\n\ninterface AuthereumConnectorArguments {\n  chainId: number\n  config?: any\n}\n\nexport class AuthereumConnector extends AbstractConnector {\n  private readonly chainId: number\n  private readonly config: any\n\n  public authereum: any\n\n  constructor({ chainId, config = {} }: AuthereumConnectorArguments) {\n    super({ supportedChainIds: [chainId] })\n\n    this.chainId = chainId\n    this.config = config\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.authereum) {\n      const { default: Authereum } = await import('authereum')\n      this.authereum = new Authereum({\n        networkName: chainIdToNetwork[this.chainId],\n        ...this.config\n      })\n    }\n\n    await this.authereum\n      .getProvider()\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n\n    return { provider: this.authereum.getProvider() }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.authereum.getProvider()\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.authereum.getNetworkId()\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.authereum.getAccountAddress()\n  }\n\n  public deactivate() {}\n\n  public async close() {\n    this.authereum.logout()\n    this.emitDeactivate()\n  }\n}\n"]},"metadata":{},"sourceType":"module"}