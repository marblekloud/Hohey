{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport penpal from 'penpal';\nimport EventEmitter from 'eventemitter3';\nimport moment from 'moment';\nimport isBuffer from 'is-buffer';\nimport version from './version';\nimport AuthereumProvider from './AuthereumProvider';\nimport { defaultConfig } from './config';\nimport { wait, debounce, throttle, uuidv4, getQueryParamValue, removeQueryParam, updateQueryParams, replaceWindowUrl, browserInfo } from './utils'; // Serialize object for postMessage to iframe.\n// Converts references to values.\n\nconst serializeMessageObj = obj => {\n  const tx = {};\n\n  for (let k in obj) {\n    let v = obj[k];\n\n    if (typeof v === 'object' && v.toString === 'function') {\n      v = v.toString('hex');\n    }\n\n    tx[k] = v;\n  }\n\n  return tx;\n};\n\nconst defaultIframeStyle = {\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0,\n  zIndex: 1\n}; // This is a placeholder notify object stub until notifier script url is\n// injected into page after iframe is loaded.\n\nconst defaultNotifier = {\n  notify: (type, message) => {\n    console.log(type, message);\n    return {\n      dismiss: () => {// noop\n      }\n    };\n  }\n};\nexport default class Authereum extends EventEmitter {\n  constructor(config) {\n    super();\n    this._debug = !!getQueryParamValue('debug');\n    this._notifier = defaultNotifier;\n    this._iframeReady = false;\n    this._configReady = false;\n    this._iframeConnecting = null;\n    this._cacheReady = false;\n    this._readyEmitted = false;\n    this._widgetEnabled = false;\n    this._iframeStyle = defaultIframeStyle;\n    this._notificationIframeStyle = defaultIframeStyle;\n    this._blockedPopupRedirect = true;\n    this._heartbeatStarted = false;\n    this._backoffTimeout = 1;\n    this._userConfig = null;\n    this._asymmetricEncryptionKey = null;\n    this._authereumQueryParams = {};\n    this._injectedElements = [];\n    this._notificationsMap = {};\n    this._destroyed = false; // NOTE: keep this sync\n\n    this._init = config => {\n      if (typeof config === 'string') {\n        let network = config;\n        this._networkName = (network || '').trim().toLowerCase();\n\n        if (['mainnet', 'ropsten', 'rinkeby', 'kovan', 'goerli'].includes(this._networkName)) {\n          this._xsUri = defaultConfig.xsUri(this._networkName);\n        } else if (config === 'localhost') {\n          this._xsUri = 'http://localhost:3002';\n          this._networkName = 'kovan';\n        } else {\n          throw new Error('Unsupported network');\n        }\n      } else {\n        config = config || {};\n        this._networkName = config.networkName || 'mainnet';\n        this._xsUri = config.xsUri || defaultConfig.xsUri(this._networkName);\n        this._apiKey = config.apiKey;\n      }\n\n      if (config.redirectUri) {\n        this._redirectUri = config.redirectUri;\n      } else {\n        this._redirectUri = window.location.href;\n      }\n\n      this._iframeStyle = {\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        zIndex: 0\n      };\n      this._redirectUri = this._redirectUri || window.location.href;\n      this._provider = new AuthereumProvider(this);\n\n      this._connectToChildIframe().catch(() => {\n        this._startHeartbeat(true);\n      });\n\n      this._setupCache();\n\n      this._cacheAuthereumQueryParams();\n\n      this._setupSigningKey();\n\n      this._setupResizeListener();\n\n      this._setupFocusListener();\n\n      this._setupActionKeyListener();\n\n      this._emitReadyEvent();\n    }; // NOTE: keep this sync\n\n\n    this._setConfig = config => {\n      if (typeof this._userConfig === 'string') {\n        let network = this._userConfig;\n        this._networkName = (network || '').trim().toLowerCase();\n        this._userConfig = {\n          networkName: this._networkName,\n          xsUri: defaultConfig.xsUri(this._networkName)\n        };\n      }\n\n      const {\n        apiKey,\n        apiUri,\n        rpcUri,\n        webUri,\n        notifierUri,\n        networkName,\n        networkId,\n        disableNotifications,\n        blockedPopupRedirect\n      } = this._userConfig || {};\n\n      if (apiKey) {\n        this._apiKey = apiKey;\n      } // userConfig overrides regular config\n\n\n      if (apiUri) {\n        this._apiUri = apiUri;\n      } else if (config.apiUri) {\n        this._apiUri = config.apiUri;\n      } // userConfig overrides regular config\n\n\n      if (rpcUri) {\n        this._rpcUri = rpcUri;\n      } else {\n        this._rpcUri = config.rpcUri;\n      } // userConfig overrides regular config\n\n\n      if (webUri) {\n        this._webUri = webUri;\n      } else if (config.webUri) {\n        this._webUri = config.webUri;\n      } // userConfig overrides regular config\n\n\n      if (notifierUri) {\n        this._notifierUri = notifierUri;\n      } else if (config.notifierUri) {\n        this._notifierUri = config.notifierUri;\n      } // userConfig overrides regular config\n\n\n      if (networkName) {\n        this._networkName = networkName;\n      } else if (config.networkName) {\n        this._networkName = config.networkName;\n      } // userConfig overrides regular config\n\n\n      if (networkId) {\n        this._networkId = networkId;\n      } else if (config.networkId) {\n        this._networkId = config.networkId;\n      } // userConfig overrides regular config\n\n\n      if (typeof disableNotifications === 'boolean') {\n        this._disableNotifications = disableNotifications;\n      } else if (typeof config.disableNotifications === 'boolean') {\n        this._disableNotifications = config.disableNotifications;\n      } // userConfig overrides regular config\n\n\n      if (typeof blockedPopupRedirect === 'boolean') {\n        this._blockedPopupRedirect = blockedPopupRedirect;\n      } else if (typeof config.blockedPopupRedirect === 'boolean') {\n        this._blockedPopupRedirect = config.blockedPopupRedirect;\n      }\n    };\n\n    this._setupCache = () => __awaiter(this, void 0, void 0, function* () {\n      yield Promise.all([this._cacheLoginKeyAddress(), this._cacheIsAuthenticated(), this._cacheAccountAddress()]);\n      this._cacheReady = true;\n    });\n\n    this._handleWindowFocus = () => {\n      if (this._destroyed) {\n        return;\n      }\n\n      return this._postMessageToChild({\n        method: 'onWindowFocus'\n      });\n    };\n\n    this._resetCache = () => __awaiter(this, void 0, void 0, function* () {\n      return this._setupCache();\n    });\n\n    this._injectScript = (sourceUrl, id = '') => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilDomReady();\n      return new Promise((resolve, reject) => {\n        if (!sourceUrl) {\n          throw new Error('sourceUrl is required');\n        }\n\n        if (document.getElementById(id)) {\n          resolve();\n          return;\n        }\n\n        const script = document.createElement('script');\n        script.id = id;\n        script.type = 'text/javascript';\n        script.async = true;\n\n        script.onload = () => {\n          resolve();\n        };\n\n        script.onerror = err => {\n          reject(err);\n        };\n\n        script.src = sourceUrl;\n\n        this._injectedElements.push(script);\n\n        document.getElementsByTagName('head')[0].appendChild(script);\n      });\n    });\n\n    this._setupResizeListener = () => __awaiter(this, void 0, void 0, function* () {\n      window.addEventListener('resize', this._handleResizeThrottled, false);\n      window.addEventListener('resize', this._handleResizeDebounced, false);\n    });\n\n    this._handleActionKeyPress = event => {\n      if (this._destroyed) {\n        return;\n      }\n\n      let keyName = '';\n\n      if (event.key === 'Escape' || event.key === 'Esc' || event.keyCode === 27) {\n        keyName = 'escape';\n      } else if (event.key === 'Enter' || event.keyCode === 13) {\n        keyName = 'enter';\n      } else if (event.key === 'ArrowLeft' || event.keyCode === 37) {\n        keyName = 'left';\n      } else if (event.key === 'ArrowUp' || event.keyCode === 38) {\n        keyName = 'up';\n      } else if (event.key === 'ArrowRight' || event.keyCode === 39) {\n        keyName = 'right';\n      } else if (event.key === 'ArrowDown' || event.keyCode === 40) {\n        keyName = 'down';\n      }\n\n      if (keyName) {\n        return this._postMessageToChild({\n          method: 'actionKeyPress',\n          params: keyName\n        });\n      }\n    };\n\n    this._handleResize = event => __awaiter(this, void 0, void 0, function* () {\n      if (this._destroyed) {\n        return;\n      }\n\n      const size = yield this._getWindowSize();\n      return this._postMessageToChild({\n        method: 'onResize',\n        params: size\n      });\n    });\n\n    this._handleResizeThrottled = throttle(event => {\n      return this._handleResize(event);\n    }, 10);\n    this._handleResizeDebounced = debounce(event => {\n      return this._handleResize(event);\n    }, 10);\n\n    this._cacheLoginKeyAddress = () => __awaiter(this, void 0, void 0, function* () {\n      const loginKey = yield this._postMessageToChild({\n        method: 'getOrCreateLoginKey'\n      });\n      this._cachedLoginKeyAddress = loginKey.publicAddress;\n    });\n\n    this._cacheAccountAddress = () => __awaiter(this, void 0, void 0, function* () {\n      const accountAddress = yield this._postMessageToChild({\n        method: 'getAccountAddress'\n      });\n      this._cachedAccountAddress = accountAddress;\n    });\n\n    this._cacheIsAuthenticated = () => __awaiter(this, void 0, void 0, function* () {\n      const isAuthenticated = yield this._postMessageToChild({\n        method: 'isAuthenticated'\n      });\n      this._cachedIsAuthenticated = isAuthenticated;\n    }); // NOTE: to prevent pop-ups from being blocked, there must be no awaits from\n    // click to window.open, meaning value lookups must be cached before the\n    // login method is called.\n\n\n    this.login = throttle(() => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilConfigReady();\n      yield this._tilReady();\n\n      if (!this._cachedIsAuthenticated) {\n        // NOTE: if not logged in to dapp, then proceed to login\n        yield this._signLoginKeyRequest(this._cachedLoginKeyAddress);\n        return this.getAuthenticatedAccount();\n      } else {\n        // only show one already logged in notification at a time\n        if (!this._notificationsMap['loggedIn']) {\n          this._postMessageToChild({\n            method: 'notification',\n            params: {\n              type: 'success',\n              message: 'You are logged into Authereum',\n              timeout: 5e3\n            }\n          });\n\n          this._notificationsMap['loggedIn'] = true;\n          setTimeout(() => {\n            this._notificationsMap['loggedIn'] = null;\n          }, 5e3);\n        }\n      } // await first\n\n\n      const account = yield this.getAuthenticatedAccount();\n      return account;\n    }), 250);\n\n    this.authenticate = () => __awaiter(this, void 0, void 0, function* () {\n      console.warn('Deprecation notice: `authereum.authenticate()` is deprecated. Use `authereum.login()` instead.');\n      return this.login();\n    });\n\n    this.isAuthenticated = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'isAuthenticated'\n      }));\n    });\n\n    this.logout = () => __awaiter(this, void 0, void 0, function* () {\n      const res = yield this._postMessageToChild({\n        method: 'logout'\n      });\n      yield this._resetCache();\n      this.emit('logout', {});\n      return res;\n    });\n\n    this.getAuthenticatedAccount = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getAuthenticatedAccount'\n      }));\n    });\n\n    this.getDappKey = () => {\n      return this._handleError(this._postMessageToChild({\n        method: 'getLoginKey'\n      }));\n    };\n\n    this.getLoginKey = () => {\n      console.warn('Deprecation notice: `authereum.getLoginKey()` is deprecated. Use `authereum.getDappKey()` instead.');\n      return this.getDappKey();\n    };\n\n    this.signMessage = throttle(message => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'signMessage',\n        params: message\n      }));\n    }), 250);\n    this.signPersonalMessage = throttle(message => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'signPersonalMessage',\n        params: message\n      }));\n    }), 250);\n    this.signWithDappKey = throttle(message => __awaiter(this, void 0, void 0, function* () {\n      console.warn('Deprecation notice: `authereum.signWithDappKey()` is deprecated. Use `authereum.signMess()` instead.');\n      return this.signMessage(message);\n    }), 250);\n    this.signWithLoginKey = throttle(message => __awaiter(this, void 0, void 0, function* () {\n      console.warn('Deprecation notice: `authereum.signWithLoginKey()` is deprecated. Use `authereum.signWithDappKey()` instead.');\n      return this.signWithDappKey(message);\n    }), 250);\n    this.signTypedMessage = throttle(message => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'signTypedMessage',\n        params: message\n      }));\n    }), 250);\n    this.signTypedMessageWithDappKey = throttle(message => __awaiter(this, void 0, void 0, function* () {\n      console.warn('Deprecation notice: `authereum.signTypedMessageWithDappKey()` is deprecated. Use `authereum.signTypedMessage()` instead.');\n      return this.signTypedMessage(message);\n    }), 250);\n    this.signMessageWithAdminKey = throttle(message => __awaiter(this, void 0, void 0, function* () {\n      console.warn('Deprecated: `authereum.signMessageWithAdminKey()` is deprecated. Use `authereum.signMessageWithSigningKey()` instead.');\n      return null;\n    }), 250);\n    this.signMessageWithSigningKey = throttle(message => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'signMessageWithSigningKey',\n        params: message\n      }));\n    }), 250);\n\n    this.getSigningKeyAddress = message => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getSigningKeyAddress'\n      }));\n    });\n\n    this.getLoginKeyAuthSignature = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getLoginKeyAuthSignature'\n      }));\n    });\n\n    this.getLoginKeyRestrictionsData = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getLoginKeyRestrictionsData'\n      }));\n    });\n\n    this.getAccountAddress = () => __awaiter(this, void 0, void 0, function* () {\n      // required so it waits for login key to be set\n      yield this._tilReady();\n      return this._handleError(this._postMessageToChild({\n        method: 'getAccountAddress'\n      }));\n    });\n\n    this.getBalance = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getBalance'\n      }));\n    });\n\n    this.getRpcUri = () => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilConfigReady();\n      return this._rpcUri;\n    });\n\n    this.getNetworkId = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getNetworkId'\n      }));\n    });\n\n    this.getNetworkName = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getNetworkName'\n      }));\n    });\n\n    this.getProvider = () => {\n      return this._provider;\n    };\n\n    this._handleError = promise => __awaiter(this, void 0, void 0, function* () {\n      return promise.catch(err => {\n        // NOTE: emit errors but don't throw notification here.\n        this.emit('error', err); // NOTE: rethrow error to let dapps handle error\n\n        throw err;\n      });\n    });\n\n    this.signTransaction = throttle(tx => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilReady();\n      return this._handleError(this._postMessageToChild({\n        method: 'signTransaction',\n        params: serializeMessageObj(tx)\n      }));\n    }), 250);\n    this.signTransactionWithLoginKey = throttle(tx => __awaiter(this, void 0, void 0, function* () {\n      console.warn('Deprecated: `authereum.signTransactionWithLoginKey()` is deprecated. Use `authereum.signTransaction()` instead.');\n      return this.signTransaction(tx);\n    }), 250);\n    this.sendTransaction = throttle(userTransaction => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilReady();\n      return this._handleError(this._postMessageToChild({\n        method: 'sendTransaction',\n        params: serializeMessageObj(userTransaction)\n      }));\n    }), 250);\n    this.sendTransactionBatch = throttle(userTransactions => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilReady();\n      return this._handleError(this._postMessageToChild({\n        method: 'sendTransactionBatch',\n        params: userTransactions.map(serializeMessageObj)\n      }));\n    }), 250);\n    this.estimateGasBatch = throttle(userTransactions => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilReady();\n      return this._handleError(this._postMessageToChild({\n        method: 'estimateGasBatch',\n        params: userTransactions.map(serializeMessageObj)\n      }));\n    }), 250);\n\n    this.isReady = () => {\n      return this._iframeReady && this._cacheReady;\n    };\n\n    this.updateConfig = config => {\n      this._userConfig = config;\n\n      this._setConfig(config);\n    };\n\n    this.getConfig = () => {\n      return {\n        apiUri: this._apiUri,\n        rpcUri: this._rpcUri,\n        webUri: this._webUri,\n        xsUri: this._xsUri,\n        networkName: this._networkName,\n        networkId: this._networkId,\n        disableNotifications: this._disableNotifications\n      };\n    };\n\n    this.showWidget = (enabled = true) => __awaiter(this, void 0, void 0, function* () {\n      if (!enabled) {\n        this._widgetEnabled = false;\n        return this._postMessageToChild({\n          method: 'hideWidget'\n        });\n      }\n\n      this._widgetEnabled = true;\n      return this._postMessageToChild({\n        method: 'showWidget'\n      });\n    });\n\n    this.hideWidget = () => __awaiter(this, void 0, void 0, function* () {\n      this._widgetEnabled = false;\n      return this._postMessageToChild({\n        method: 'hideWidget'\n      });\n    });\n\n    this.widgetEnabled = () => {\n      return this._widgetEnabled;\n    };\n\n    this.addFunds = opts => {\n      return this._postMessageToChild({\n        method: 'addFunds',\n        params: opts\n      });\n    };\n\n    this._openUrl = (opts = {}) => {\n      const {\n        url,\n        newWindow\n      } = opts;\n\n      if (newWindow) {\n        window.open(url, '_blank');\n      } else {\n        window.location.href = url;\n      }\n    };\n\n    this._tilIframeReady = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this._iframeReady) {\n        yield wait(100);\n        return this._tilIframeReady();\n      }\n\n      yield wait(100);\n      return true;\n    });\n\n    this._tilConfigReady = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this._configReady) {\n        yield wait(100);\n        return this._tilConfigReady();\n      }\n\n      yield wait(100);\n      return true;\n    });\n\n    this._tilReady = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.isReady()) {\n        yield wait(100);\n        return this._tilReady();\n      }\n\n      yield wait(100);\n      return true;\n    });\n\n    this._emitReadyEvent = () => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilReady();\n      if (this._readyEmitted) return;\n      this._readyEmitted = true;\n      this.emit('ready', {});\n    });\n\n    this._connectToChildIframe = () => __awaiter(this, void 0, void 0, function* () {\n      if (this._iframeConnecting) {\n        return this._iframeConnecting;\n      }\n\n      this._iframeReady = false;\n      this._iframeConnecting = true;\n      const iframe = yield this._getOrCreateMainIframe();\n      this._iframeConnection = penpal.connectToChild({\n        iframe,\n        timeout: 60e3,\n        methods: {\n          // NOTE: the postMessage penpal method should be the only method that\n          // exists.\n          postMessage: data => {\n            return this._handlePostMessage(data);\n          }\n        }\n      });\n      this._iframeConnecting = new Promise((resolve, reject) => {\n        let timedout = false;\n        const timer = setTimeout(() => {\n          if (!this._iframeReady) {\n            timedout = true;\n            this._iframeConnecting = null;\n            reject(new Error('timedout'));\n          }\n        }, 3e3);\n\n        this._iframeConnection.promise.then(child => {\n          clearTimeout(timer);\n\n          if (timedout) {\n            return;\n          }\n\n          this._iframeReady = true;\n          this._childIframeConnection = child;\n\n          this._startHeartbeat();\n\n          this._iframeConnecting = null;\n          resolve();\n        }).catch(err => {\n          clearTimeout(timer);\n\n          if (timedout) {\n            return;\n          }\n\n          reject(err);\n        });\n      });\n      return this._iframeConnecting;\n    });\n\n    this._startHeartbeat = (reconnect = false) => {\n      if (!this._heartbeatStarted) {\n        this._heartbeat(reconnect);\n\n        this._heartbeatStarted = true;\n      }\n    };\n\n    this._heartbeat = (reconnect = false) => __awaiter(this, void 0, void 0, function* () {\n      if (this._destroyed) {\n        return;\n      }\n\n      yield wait(2e3);\n\n      try {\n        if (reconnect) {\n          yield this._connectToChildIframe();\n          this._backoffTimeout = 1;\n          return this._heartbeat();\n        }\n\n        yield this._ping();\n      } catch (err) {\n        // reconnect on destroyed connection error or ping timeout error\n        if (/destroy|timedout/gi.test(err.message)) {\n          yield wait(this._backoffTimeout * 1e3); // exponential backoff\n\n          this._backoffTimeout = this._backoffTimeout << 1;\n          return this._heartbeat(true);\n        }\n      }\n\n      return this._heartbeat();\n    });\n\n    this._ping = () => __awaiter(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        let timedout = false;\n        const timer = setTimeout(() => {\n          timedout = true;\n        }, 5e3);\n\n        this._postMessageToChild({\n          method: 'ping'\n        }).then(pong => {\n          clearTimeout(timer);\n\n          if (timedout) {\n            reject(new Error('timedout'));\n            return;\n          }\n\n          if (pong !== 'pong') {\n            reject(new Error('Invalid response'));\n            return;\n          }\n\n          resolve(pong);\n        }).catch(err => {\n          reject(err);\n        });\n      });\n    });\n\n    this._injectIframe = input => {\n      const {\n        id,\n        url\n      } = input;\n      let parentUrl = window.location.href;\n\n      try {\n        parentUrl = parent.document.URL;\n      } catch (err) {// noop\n      }\n\n      const srcUrl = updateQueryParams({\n        url: parentUrl\n      }, url);\n      const iframe = document.createElement('iframe');\n      iframe.id = id;\n      iframe.src = srcUrl;\n\n      if (['Safari', 'Firefox'].includes(browserInfo().browser)) {\n        iframe.setAttribute('sandbox', 'allow-storage-access-by-user-activation allow-scripts allow-same-origin');\n      }\n\n      iframe.style.position = 'fixed';\n      iframe.style.bottom = '0';\n      iframe.style.right = '0';\n      iframe.style.width = '0';\n      iframe.style.height = '0';\n      iframe.style.border = '0';\n      iframe.style.background = 'transparent';\n      iframe.style.zIndex = `${defaultIframeStyle.zIndex}`;\n      iframe.setAttribute('frameborder', '0');\n      iframe.setAttribute('scrolling', 'no');\n\n      if (this._debug) {\n        iframe.style.outline = '1px solid red';\n      }\n\n      this._injectedElements.push(iframe);\n\n      return iframe;\n    };\n\n    this._getConfigFromChild = () => __awaiter(this, void 0, void 0, function* () {\n      return this._postMessageToChild({\n        method: 'getConfig'\n      });\n    });\n\n    this._postVersionToChild = () => __awaiter(this, void 0, void 0, function* () {\n      return this._postMessageToChild({\n        method: 'version',\n        params: this.version()\n      });\n    });\n\n    this._postConfigToChild = () => __awaiter(this, void 0, void 0, function* () {\n      return this._postMessageToChild({\n        method: 'config',\n        params: {\n          apiKey: this._apiKey,\n          disableNotifications: this._disableNotifications\n        }\n      });\n    });\n\n    this._loadAsymmetricEncryptionKeyFromChild = () => __awaiter(this, void 0, void 0, function* () {\n      this._asymmetricEncryptionKey = yield this._postMessageToChild({\n        method: 'getAsymmetricEncryptionKey'\n      });\n    });\n\n    this._postMessageToChild = data => __awaiter(this, void 0, void 0, function* () {\n      if (this._destroyed) {\n        throw new Error('Authereum instance destroyed.');\n      }\n\n      yield this._tilIframeReady();\n      return this._handleError(this._childIframeConnection.postMessage(data));\n    });\n\n    this._handleChildLogoutEvent = () => __awaiter(this, void 0, void 0, function* () {\n      yield this._resetCache();\n      this.emit('logout', {});\n    });\n\n    this._handleChildDappKeyExpired = loginKeyAddress => __awaiter(this, void 0, void 0, function* () {\n      if (loginKeyAddress === this._cachedLoginKeyAddress) {\n        yield this._resetCache();\n        this.emit('dappKeyExpired', loginKeyAddress);\n        this.emit('logout');\n      }\n    });\n\n    this._handlePostMessage = data => {\n      try {\n        const {\n          method,\n          params\n        } = data;\n\n        switch (method) {\n          case 'onError':\n            const err = params;\n            this.emit('error', err);\n\n            this._notifier.notify({\n              type: 'error',\n              message: err.message\n            });\n\n            return;\n\n          case 'onLogout':\n            return this._handleChildLogoutEvent();\n\n          case 'onDappKeyExpired':\n            return this._handleChildDappKeyExpired(params);\n\n          case 'login':\n            return this.login();\n\n          case 'setWidgetPosition':\n            // const position = params\n            // const { x, y } = position\n            // this.iframeStyle.left = x\n            // this.iframeStyle.top = y\n            // this._refreshWidget()\n            return;\n\n          case 'setWidgetSize':\n            {\n              const size = params;\n              const {\n                width,\n                height\n              } = size;\n              this._iframeStyle.width = width;\n              this._iframeStyle.height = height;\n              return this._refreshWidget();\n            }\n\n          case 'setWidgetStyle':\n            {\n              const style = params;\n\n              for (let key in style) {\n                this._iframeStyle[key] = style[key];\n              }\n\n              return this._refreshWidget();\n            }\n\n          case 'setNotificationWidgetSize':\n            {\n              const size = params;\n              const {\n                width,\n                height\n              } = size;\n              this._notificationIframeStyle.width = width;\n              this._notificationIframeStyle.height = height;\n              return this._refreshNotificationWidget();\n            }\n\n          case 'setNotificationWidgetStyle':\n            {\n              const style = params;\n\n              for (let key in style) {\n                this._notificationIframeStyle[key] = style[key];\n              }\n\n              return this._refreshNotificationWidget();\n            }\n\n          case 'getWindowSize':\n            return this._getWindowSize();\n\n          case 'hideWidget':\n            return this.hideWidget();\n\n          case 'log':\n            return this._handlePostMessageLog(params);\n\n          case 'openUrl':\n            return this._openUrl(params);\n\n          default:\n            break;\n        }\n      } catch (err) {// noop\n      }\n    };\n\n    this._handlePostMessageLog = data => {\n      let {\n        type,\n        message\n      } = data;\n\n      if (!type) {\n        type = 'log';\n      }\n\n      console[type](message);\n    };\n\n    this._getWindowSize = () => {\n      return {\n        width: this._getWindowWidth(),\n        height: this._getWindowHeight()\n      };\n    };\n\n    this._getWindowWidth = () => {\n      return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    };\n\n    this._getWindowHeight = () => {\n      return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    }; // public _setIframePositionTop = (y: number) => {\n    // if (!this._iframe) return\n    // this._iframe.style.top = `${y}px`\n    // }\n\n\n    this._setIframePositionLeft = x => {\n      if (!this._iframe) return;\n      this._iframe.style.left = `${x}px`;\n    };\n\n    this._setIframeWidth = width => {\n      if (!this._iframe) return;\n      this._iframe.style.width = `${width}px`;\n    };\n\n    this._setIframeHeight = height => {\n      if (!this._iframe) return;\n      this._iframe.style.height = `${height}px`;\n    };\n\n    this._refreshWidget = () => {\n      const {\n        top,\n        left,\n        width,\n        height,\n        zIndex\n      } = this._iframeStyle;\n      if (!this._iframe) return; // this._setIframePositionTop(top)\n      // this._setIframePositionLeft(left)\n\n      this._setIframeWidth(width);\n\n      this._setIframeHeight(height);\n\n      this._iframe.style.zIndex = `${zIndex || 0}`;\n    };\n\n    this._refreshNotificationWidget = () => {\n      const {\n        top,\n        left,\n        width,\n        height,\n        zIndex\n      } = this._notificationIframeStyle;\n      this._notificationIframe.style.width = `${width}px`;\n      this._notificationIframe.style.height = `${height}px`;\n      this._notificationIframe.style.zIndex = `${zIndex || 0}`;\n    };\n\n    this._loginKeyExists = () => __awaiter(this, void 0, void 0, function* () {\n      return !!(yield this.getLoginKey());\n    });\n\n    this._accountAddressExists = () => __awaiter(this, void 0, void 0, function* () {\n      return !!(yield this.getAccountAddress());\n    });\n\n    this._getAccountAdminKeyNonce = () => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'getAccountAuthKeyNonce'\n      }));\n    });\n\n    this._getAccountAuthKeyNonce = () => __awaiter(this, void 0, void 0, function* () {\n      console.warn('Deprecation notice: `authereum._getAccountAuthKeyNonce()` is deprecated. Use `authereum._getAccountAdminKeyNonce()` instead.');\n      return this._getAccountAdminKeyNonce();\n    });\n\n    this._executeLoginKeyMetaTx = tx => __awaiter(this, void 0, void 0, function* () {\n      return this._handleError(this._postMessageToChild({\n        method: 'executeLoginKeyMetaTx',\n        params: serializeMessageObj(tx)\n      }));\n    });\n\n    this._loadLoginKey = loginKey => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilReady();\n      return this._handleError(this._postMessageToChild({\n        method: 'loadLoginKey',\n        params: loginKey\n      }));\n    });\n\n    this._getOrCreateLoginKey = () => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilReady();\n      return this._handleError(this._postMessageToChild({\n        method: 'getOrCreateLoginKey'\n      }));\n    });\n\n    this._getAuthenticateUri = loginKeyAddress => {\n      const encryptionKey = this._asymmetricEncryptionKey; // NOTE: slk = sign login key\n\n      return this._webUri + '/?slk=' + encodeURIComponent(JSON.stringify({\n        loginKey: {\n          publicAddress: loginKeyAddress,\n          // Convert to UTC to avoid local machine timezones\n          expiresAt: moment().add(1, 'month').utc().unix()\n        },\n        encryptionKey\n      })) + '&redirect_uri=' + this._redirectUri;\n    };\n\n    this._getSignWithAdminKeyUri = message => {\n      if (isBuffer(message)) {\n        message = `0x${message.toString('hex')}`;\n      } // NOTE: sm = sign message\n\n\n      return this._webUri + '/?sm=' + encodeURIComponent(JSON.stringify({\n        message\n      })) + '&redirect_uri=' + this._redirectUri;\n    };\n\n    this._openPopupOrRedirect = url => __awaiter(this, void 0, void 0, function* () {\n      this.emit('openPopup', {});\n      const child = window.open(url, 'Authereum', `toolbar=no,\n      location=no,\n      status=no,\n      menubar=no,\n      scrollbars=no,\n      resizable=no,\n      width=470,\n      height=640`);\n      const isBlocked = child === null || child === undefined;\n\n      if (isBlocked && !this._blockedPopupRedirect) {\n        const err = new Error('Disable popup blocker and try again');\n\n        this._notifier.notify({\n          type: 'error',\n          message: err.message,\n          timeout: 5000\n        });\n\n        throw err;\n      } else if (isBlocked) {\n        this.emit('popupBlocked'); // NOTE: if window is blocked then resort to redirect\n\n        window.location.href = url;\n        return;\n      }\n\n      child.focus();\n      return new Promise((resolve, reject) => {\n        const interval = setInterval(() => __awaiter(this, void 0, void 0, function* () {\n          if (child.closed) {\n            cleanUp();\n            const err = new Error('Window closed');\n            this.emit('error', err);\n            this.emit('closePopup', {});\n            reject(err);\n          }\n        }), 250);\n        const timeout = setTimeout(() => {\n          cleanUp();\n          child.close();\n          doneWithError(new Error('Timedout'));\n        }, 10 * 60 * 1000);\n\n        const cleanUp = () => {\n          clearInterval(interval);\n          clearTimeout(timeout);\n          this.emit('closePopup', {});\n        };\n\n        const doneWithError = err => {\n          cleanUp();\n          this.emit('error', err);\n          reject(err);\n        };\n\n        const done = (result = {}) => {\n          cleanUp();\n          resolve(result);\n        };\n\n        window.addEventListener('message', event => __awaiter(this, void 0, void 0, function* () {\n          if (event.origin.includes(this._webUri)) {\n            // this event tells parent to close child popup\n            if (event.data.close) {\n              child.close();\n              done();\n            }\n\n            if (event.data.login) {\n              done({\n                success: true\n              });\n              this.emit('login', {});\n              this._cachedIsAuthenticated = true;\n\n              if (event.data.encryptedSigningKey) {\n                yield this._loadSigningKey(event.data.encryptedSigningKey);\n              }\n\n              this._logAnalyticsEvent({\n                eventType: 'logged_in_dapp',\n                properties: {\n                  dapp_url: window.location.href\n                }\n              });\n\n              if (this._redirectUri !== window.location.href) {\n                window.location.href = this._redirectUri;\n              }\n            }\n\n            if (event.data.result) {\n              done(event.data.result);\n\n              if (this._redirectUri !== window.location.href) {\n                window.location.href = this._redirectUri;\n              }\n            }\n\n            if (event.data.error) {\n              doneWithError(new Error(event.data.error));\n\n              if (this._redirectUri !== window.location.href) {\n                window.location.href = this._redirectUri;\n              }\n            }\n          }\n        }));\n      });\n    });\n\n    this._signLoginKeyRequest = publicAddress => __awaiter(this, void 0, void 0, function* () {\n      const url = this._getAuthenticateUri(publicAddress);\n\n      return this._openPopupOrRedirect(url);\n    });\n\n    this._tilDomReady = () => __awaiter(this, void 0, void 0, function* () {\n      return new Promise(resolve => {\n        if (document.readyState !== 'loading') {\n          resolve();\n        } else {\n          document.addEventListener('DOMContentLoaded', () => resolve());\n        }\n      });\n    }); // keep both static and normal version methods\n\n\n    this.version = () => {\n      return version;\n    };\n\n    this.isAuthenticatedSync = () => {\n      return this._cachedIsAuthenticated;\n    };\n\n    this.getTransactionReceipt = txHash => {\n      return this._handleError(this._postMessageToChild({\n        method: 'getTransactionReceipt',\n        params: txHash\n      }));\n    };\n\n    this.waitForTransactionReceipt = txHash => {\n      return this._handleError(this._postMessageToChild({\n        method: 'waitForTransactionReceipt',\n        params: txHash\n      }));\n    };\n\n    this.hasRecoveryEnabled = () => {\n      return this._handleError(this._postMessageToChild({\n        method: 'hasRecoveryEnabled'\n      }));\n    };\n\n    this.isContractDeployed = accountAddress => {\n      return this._handleError(this._postMessageToChild({\n        method: 'isContractDeployed',\n        params: accountAddress\n      }));\n    };\n\n    this._loadSigningKey = signingKey => __awaiter(this, void 0, void 0, function* () {\n      return this._postMessageToChild({\n        method: 'loadSigningKey',\n        params: signingKey\n      });\n    });\n\n    this._logAnalyticsEvent = input => __awaiter(this, void 0, void 0, function* () {\n      return this._postMessageToChild({\n        method: 'logAnalyticsEvent',\n        params: input\n      });\n    });\n\n    this._setupSigningKey = () => __awaiter(this, void 0, void 0, function* () {\n      yield this._tilReady();\n      const encryptedSigningKey = this._authereumQueryParams['encryptedSigningKey'];\n\n      if (encryptedSigningKey) {\n        const success = yield this._loadSigningKey(encryptedSigningKey);\n\n        if (success) {\n          try {\n            localStorage.removeItem('_authereum');\n          } catch (err) {// noop\n          }\n        }\n      }\n    });\n\n    this._cacheAuthereumQueryParams = () => __awaiter(this, void 0, void 0, function* () {\n      try {\n        const param = getQueryParamValue('_authereum');\n\n        if (param) {\n          this._authereumQueryParams = JSON.parse(param);\n\n          try {\n            localStorage.setItem('_authereum', btoa(JSON.stringify(this._authereumQueryParams)));\n          } catch (err) {// noop\n          }\n\n          const newUrl = removeQueryParam('_authereum');\n          replaceWindowUrl(newUrl);\n        } else {\n          try {\n            // load from local storage cache if exists.\n            // this local storage is cleared after connection.\n            let cached = localStorage.getItem('_authereum');\n\n            if (cached) {\n              this._authereumQueryParams = JSON.parse(atob(cached));\n            }\n          } catch (err) {// noop\n          }\n        }\n      } catch (err) {// noop\n      }\n    });\n\n    this.destroy = () => __awaiter(this, void 0, void 0, function* () {\n      if (this._destroyed) {\n        console.warn('Authereum instance already destroyed.');\n        return true;\n      }\n\n      try {\n        if (this._iframeReady) {\n          yield this._postMessageToChild({\n            method: 'destroy'\n          });\n        }\n      } catch (err) {\n        console.error(err);\n      }\n\n      for (let i = 0; i < this._injectedElements.length; i++) {\n        const element = this._injectedElements[i];\n\n        try {\n          element.remove();\n        } catch (err) {\n          console.error(err);\n        }\n      }\n\n      const elements = document.querySelectorAll('[id*=\"authereum\"]');\n\n      for (let i = 0; i < elements.length; i++) {\n        const element = elements[i];\n\n        try {\n          element.remove();\n        } catch (err) {\n          console.error(err);\n        }\n      }\n\n      this._iframeReady = false;\n      this._destroyed = true;\n      console.warn('Authereum instance destroyed.');\n\n      this._teardownEventListeners();\n\n      this.emit('destroy', {});\n      return true;\n    });\n\n    this.isDestroyed = () => {\n      return this._destroyed;\n    };\n\n    this.getAddressQrCodeDataUri = address => __awaiter(this, void 0, void 0, function* () {\n      return this._postMessageToChild({\n        method: 'getAddressQrCodeDataUri',\n        params: {\n          address\n        }\n      });\n    });\n\n    this._loadNotificationsIframe = url => __awaiter(this, void 0, void 0, function* () {\n      const id = `authereum__x-notification-iframe--${uuidv4()}`;\n      this._notificationIframe = this._injectIframe({\n        id,\n        url\n      });\n      this._notificationIframe.style.top = '0';\n      this._notificationIframe.style.right = '0';\n      yield this._tilDomReady();\n      document.body.appendChild(this._notificationIframe);\n    });\n\n    this._setDebug = enabled => __awaiter(this, void 0, void 0, function* () {\n      this._debug = enabled;\n\n      if (this._debug) {\n        this._iframe.style.outline = '1px solid red';\n        this._notificationIframe.style.outline = '1px solid red';\n      } else {\n        this._iframe.style.outline = '0';\n        this._notificationIframe.style.outline = '0';\n      }\n    });\n\n    this._userConfig = config;\n\n    this._init(config);\n  }\n\n  _setupFocusListener() {\n    window.addEventListener('focus', this._handleWindowFocus, false);\n  }\n\n  _setupActionKeyListener() {\n    window.addEventListener('keydown', this._handleActionKeyPress, false);\n  }\n\n  _teardownEventListeners() {\n    window.removeEventListener('resize', this._handleResizeThrottled, false);\n    window.removeEventListener('resize', this._handleResizeDebounced, false);\n    window.removeEventListener('focus', this._handleWindowFocus, false);\n    window.removeEventListener('keydown', this._handleActionKeyPress, false);\n  }\n\n  _getOrCreateMainIframe() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._iframe) {\n        if (this._iframeConnection) {\n          this._iframeConnection.destroy();\n        }\n\n        this._iframe.remove();\n      }\n\n      return new Promise(resolve => __awaiter(this, void 0, void 0, function* () {\n        const id = `authereum__x-iframe--${uuidv4()}`;\n        this._iframe = this._injectIframe({\n          id,\n          url: this._xsUri\n        });\n        resolve(this._iframe);\n        yield this._tilDomReady();\n        document.body.appendChild(this._iframe);\n\n        this._iframe.onload = () => {\n          this._postVersionToChild();\n\n          this._loadAsymmetricEncryptionKeyFromChild();\n\n          this._getConfigFromChild().then(config => {\n            this._loadNotificationsIframe(config.notifierIframeUri);\n\n            this._setConfig(config);\n\n            this._postConfigToChild();\n\n            this._configReady = true;\n            this.emit('iframeReady', {});\n          });\n        };\n      }));\n    });\n  }\n\n} // keep both static and normal version methods\n\nAuthereum.version = () => {\n  return version;\n};\n\nif (typeof window !== 'undefined') {\n  window.Authereum = Authereum;\n}","map":{"version":3,"sources":["/Users/kelvinho/Documents/Coding/HoHey-main 4 2/hoheywebsite/client/src/example/node_modules/authereum/dist/AuthereumSDK.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","penpal","EventEmitter","moment","isBuffer","version","AuthereumProvider","defaultConfig","wait","debounce","throttle","uuidv4","getQueryParamValue","removeQueryParam","updateQueryParams","replaceWindowUrl","browserInfo","serializeMessageObj","obj","tx","k","v","toString","defaultIframeStyle","width","height","top","left","zIndex","defaultNotifier","notify","type","message","console","log","dismiss","Authereum","constructor","config","_debug","_notifier","_iframeReady","_configReady","_iframeConnecting","_cacheReady","_readyEmitted","_widgetEnabled","_iframeStyle","_notificationIframeStyle","_blockedPopupRedirect","_heartbeatStarted","_backoffTimeout","_userConfig","_asymmetricEncryptionKey","_authereumQueryParams","_injectedElements","_notificationsMap","_destroyed","_init","network","_networkName","trim","toLowerCase","includes","_xsUri","xsUri","Error","networkName","_apiKey","apiKey","redirectUri","_redirectUri","window","location","href","_provider","_connectToChildIframe","catch","_startHeartbeat","_setupCache","_cacheAuthereumQueryParams","_setupSigningKey","_setupResizeListener","_setupFocusListener","_setupActionKeyListener","_emitReadyEvent","_setConfig","apiUri","rpcUri","webUri","notifierUri","networkId","disableNotifications","blockedPopupRedirect","_apiUri","_rpcUri","_webUri","_notifierUri","_networkId","_disableNotifications","all","_cacheLoginKeyAddress","_cacheIsAuthenticated","_cacheAccountAddress","_handleWindowFocus","_postMessageToChild","method","_resetCache","_injectScript","sourceUrl","id","_tilDomReady","document","getElementById","script","createElement","async","onload","onerror","err","src","push","getElementsByTagName","appendChild","addEventListener","_handleResizeThrottled","_handleResizeDebounced","_handleActionKeyPress","event","keyName","key","keyCode","params","_handleResize","size","_getWindowSize","loginKey","_cachedLoginKeyAddress","publicAddress","accountAddress","_cachedAccountAddress","isAuthenticated","_cachedIsAuthenticated","login","_tilConfigReady","_tilReady","_signLoginKeyRequest","getAuthenticatedAccount","timeout","setTimeout","account","authenticate","warn","_handleError","logout","res","emit","getDappKey","getLoginKey","signMessage","signPersonalMessage","signWithDappKey","signWithLoginKey","signTypedMessage","signTypedMessageWithDappKey","signMessageWithAdminKey","signMessageWithSigningKey","getSigningKeyAddress","getLoginKeyAuthSignature","getLoginKeyRestrictionsData","getAccountAddress","getBalance","getRpcUri","getNetworkId","getNetworkName","getProvider","promise","signTransaction","signTransactionWithLoginKey","sendTransaction","userTransaction","sendTransactionBatch","userTransactions","map","estimateGasBatch","isReady","updateConfig","getConfig","showWidget","enabled","hideWidget","widgetEnabled","addFunds","opts","_openUrl","url","newWindow","open","_tilIframeReady","iframe","_getOrCreateMainIframe","_iframeConnection","connectToChild","methods","postMessage","data","_handlePostMessage","timedout","timer","child","clearTimeout","_childIframeConnection","reconnect","_heartbeat","_ping","test","pong","_injectIframe","input","parentUrl","parent","URL","srcUrl","browser","setAttribute","style","position","bottom","right","border","background","outline","_getConfigFromChild","_postVersionToChild","_postConfigToChild","_loadAsymmetricEncryptionKeyFromChild","_handleChildLogoutEvent","_handleChildDappKeyExpired","loginKeyAddress","_refreshWidget","_refreshNotificationWidget","_handlePostMessageLog","_getWindowWidth","_getWindowHeight","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","_setIframePositionLeft","x","_iframe","_setIframeWidth","_setIframeHeight","_notificationIframe","_loginKeyExists","_accountAddressExists","_getAccountAdminKeyNonce","_getAccountAuthKeyNonce","_executeLoginKeyMetaTx","_loadLoginKey","_getOrCreateLoginKey","_getAuthenticateUri","encryptionKey","encodeURIComponent","JSON","stringify","expiresAt","add","utc","unix","_getSignWithAdminKeyUri","_openPopupOrRedirect","isBlocked","undefined","focus","interval","setInterval","closed","cleanUp","close","doneWithError","clearInterval","origin","success","encryptedSigningKey","_loadSigningKey","_logAnalyticsEvent","eventType","properties","dapp_url","error","readyState","isAuthenticatedSync","getTransactionReceipt","txHash","waitForTransactionReceipt","hasRecoveryEnabled","isContractDeployed","signingKey","localStorage","removeItem","param","parse","setItem","btoa","newUrl","cached","getItem","atob","destroy","i","length","element","remove","elements","querySelectorAll","_teardownEventListeners","isDestroyed","getAddressQrCodeDataUri","address","_loadNotificationsIframe","_setDebug","removeEventListener","notifierIframeUri"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport penpal from 'penpal';\nimport EventEmitter from 'eventemitter3';\nimport moment from 'moment';\nimport isBuffer from 'is-buffer';\nimport version from './version';\nimport AuthereumProvider from './AuthereumProvider';\nimport { defaultConfig } from './config';\nimport { wait, debounce, throttle, uuidv4, getQueryParamValue, removeQueryParam, updateQueryParams, replaceWindowUrl, browserInfo } from './utils';\n// Serialize object for postMessage to iframe.\n// Converts references to values.\nconst serializeMessageObj = (obj) => {\n    const tx = {};\n    for (let k in obj) {\n        let v = obj[k];\n        if (typeof v === 'object' && v.toString === 'function') {\n            v = v.toString('hex');\n        }\n        tx[k] = v;\n    }\n    return tx;\n};\nconst defaultIframeStyle = {\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0,\n    zIndex: 1\n};\n// This is a placeholder notify object stub until notifier script url is\n// injected into page after iframe is loaded.\nconst defaultNotifier = {\n    notify: (type, message) => {\n        console.log(type, message);\n        return {\n            dismiss: () => {\n                // noop\n            }\n        };\n    }\n};\nexport default class Authereum extends EventEmitter {\n    constructor(config) {\n        super();\n        this._debug = !!getQueryParamValue('debug');\n        this._notifier = defaultNotifier;\n        this._iframeReady = false;\n        this._configReady = false;\n        this._iframeConnecting = null;\n        this._cacheReady = false;\n        this._readyEmitted = false;\n        this._widgetEnabled = false;\n        this._iframeStyle = defaultIframeStyle;\n        this._notificationIframeStyle = defaultIframeStyle;\n        this._blockedPopupRedirect = true;\n        this._heartbeatStarted = false;\n        this._backoffTimeout = 1;\n        this._userConfig = null;\n        this._asymmetricEncryptionKey = null;\n        this._authereumQueryParams = {};\n        this._injectedElements = [];\n        this._notificationsMap = {};\n        this._destroyed = false;\n        // NOTE: keep this sync\n        this._init = (config) => {\n            if (typeof config === 'string') {\n                let network = config;\n                this._networkName = (network || '').trim().toLowerCase();\n                if (['mainnet', 'ropsten', 'rinkeby', 'kovan', 'goerli'].includes(this._networkName)) {\n                    this._xsUri = defaultConfig.xsUri(this._networkName);\n                }\n                else if (config === 'localhost') {\n                    this._xsUri = 'http://localhost:3002';\n                    this._networkName = 'kovan';\n                }\n                else {\n                    throw new Error('Unsupported network');\n                }\n            }\n            else {\n                config = config || {};\n                this._networkName = config.networkName || 'mainnet';\n                this._xsUri = config.xsUri || defaultConfig.xsUri(this._networkName);\n                this._apiKey = config.apiKey;\n            }\n            if (config.redirectUri) {\n                this._redirectUri = config.redirectUri;\n            }\n            else {\n                this._redirectUri = window.location.href;\n            }\n            this._iframeStyle = {\n                width: 0,\n                height: 0,\n                top: 0,\n                left: 0,\n                zIndex: 0\n            };\n            this._redirectUri = this._redirectUri || window.location.href;\n            this._provider = new AuthereumProvider(this);\n            this._connectToChildIframe()\n                .catch(() => {\n                this._startHeartbeat(true);\n            });\n            this._setupCache();\n            this._cacheAuthereumQueryParams();\n            this._setupSigningKey();\n            this._setupResizeListener();\n            this._setupFocusListener();\n            this._setupActionKeyListener();\n            this._emitReadyEvent();\n        };\n        // NOTE: keep this sync\n        this._setConfig = (config) => {\n            if (typeof this._userConfig === 'string') {\n                let network = this._userConfig;\n                this._networkName = (network || '').trim().toLowerCase();\n                this._userConfig = {\n                    networkName: this._networkName,\n                    xsUri: defaultConfig.xsUri(this._networkName)\n                };\n            }\n            const { apiKey, apiUri, rpcUri, webUri, notifierUri, networkName, networkId, disableNotifications, blockedPopupRedirect } = this._userConfig || {};\n            if (apiKey) {\n                this._apiKey = apiKey;\n            }\n            // userConfig overrides regular config\n            if (apiUri) {\n                this._apiUri = apiUri;\n            }\n            else if (config.apiUri) {\n                this._apiUri = config.apiUri;\n            }\n            // userConfig overrides regular config\n            if (rpcUri) {\n                this._rpcUri = rpcUri;\n            }\n            else {\n                this._rpcUri = config.rpcUri;\n            }\n            // userConfig overrides regular config\n            if (webUri) {\n                this._webUri = webUri;\n            }\n            else if (config.webUri) {\n                this._webUri = config.webUri;\n            }\n            // userConfig overrides regular config\n            if (notifierUri) {\n                this._notifierUri = notifierUri;\n            }\n            else if (config.notifierUri) {\n                this._notifierUri = config.notifierUri;\n            }\n            // userConfig overrides regular config\n            if (networkName) {\n                this._networkName = networkName;\n            }\n            else if (config.networkName) {\n                this._networkName = config.networkName;\n            }\n            // userConfig overrides regular config\n            if (networkId) {\n                this._networkId = networkId;\n            }\n            else if (config.networkId) {\n                this._networkId = config.networkId;\n            }\n            // userConfig overrides regular config\n            if (typeof disableNotifications === 'boolean') {\n                this._disableNotifications = disableNotifications;\n            }\n            else if (typeof config.disableNotifications === 'boolean') {\n                this._disableNotifications = config.disableNotifications;\n            }\n            // userConfig overrides regular config\n            if (typeof blockedPopupRedirect === 'boolean') {\n                this._blockedPopupRedirect = blockedPopupRedirect;\n            }\n            else if (typeof config.blockedPopupRedirect === 'boolean') {\n                this._blockedPopupRedirect = config.blockedPopupRedirect;\n            }\n        };\n        this._setupCache = () => __awaiter(this, void 0, void 0, function* () {\n            yield Promise.all([\n                this._cacheLoginKeyAddress(),\n                this._cacheIsAuthenticated(),\n                this._cacheAccountAddress()\n            ]);\n            this._cacheReady = true;\n        });\n        this._handleWindowFocus = () => {\n            if (this._destroyed) {\n                return;\n            }\n            return this._postMessageToChild({\n                method: 'onWindowFocus'\n            });\n        };\n        this._resetCache = () => __awaiter(this, void 0, void 0, function* () {\n            return this._setupCache();\n        });\n        this._injectScript = (sourceUrl, id = '') => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilDomReady();\n            return new Promise((resolve, reject) => {\n                if (!sourceUrl) {\n                    throw new Error('sourceUrl is required');\n                }\n                if (document.getElementById(id)) {\n                    resolve();\n                    return;\n                }\n                const script = document.createElement('script');\n                script.id = id;\n                script.type = 'text/javascript';\n                script.async = true;\n                script.onload = () => {\n                    resolve();\n                };\n                script.onerror = (err) => {\n                    reject(err);\n                };\n                script.src = sourceUrl;\n                this._injectedElements.push(script);\n                document.getElementsByTagName('head')[0].appendChild(script);\n            });\n        });\n        this._setupResizeListener = () => __awaiter(this, void 0, void 0, function* () {\n            window.addEventListener('resize', this._handleResizeThrottled, false);\n            window.addEventListener('resize', this._handleResizeDebounced, false);\n        });\n        this._handleActionKeyPress = (event) => {\n            if (this._destroyed) {\n                return;\n            }\n            let keyName = '';\n            if (event.key === 'Escape' || event.key === 'Esc' || event.keyCode === 27) {\n                keyName = 'escape';\n            }\n            else if (event.key === 'Enter' || event.keyCode === 13) {\n                keyName = 'enter';\n            }\n            else if (event.key === 'ArrowLeft' || event.keyCode === 37) {\n                keyName = 'left';\n            }\n            else if (event.key === 'ArrowUp' || event.keyCode === 38) {\n                keyName = 'up';\n            }\n            else if (event.key === 'ArrowRight' || event.keyCode === 39) {\n                keyName = 'right';\n            }\n            else if (event.key === 'ArrowDown' || event.keyCode === 40) {\n                keyName = 'down';\n            }\n            if (keyName) {\n                return this._postMessageToChild({\n                    method: 'actionKeyPress',\n                    params: keyName\n                });\n            }\n        };\n        this._handleResize = (event) => __awaiter(this, void 0, void 0, function* () {\n            if (this._destroyed) {\n                return;\n            }\n            const size = yield this._getWindowSize();\n            return this._postMessageToChild({\n                method: 'onResize',\n                params: size\n            });\n        });\n        this._handleResizeThrottled = throttle((event) => {\n            return this._handleResize(event);\n        }, 10);\n        this._handleResizeDebounced = debounce((event) => {\n            return this._handleResize(event);\n        }, 10);\n        this._cacheLoginKeyAddress = () => __awaiter(this, void 0, void 0, function* () {\n            const loginKey = yield this._postMessageToChild({\n                method: 'getOrCreateLoginKey'\n            });\n            this._cachedLoginKeyAddress = loginKey.publicAddress;\n        });\n        this._cacheAccountAddress = () => __awaiter(this, void 0, void 0, function* () {\n            const accountAddress = yield this._postMessageToChild({\n                method: 'getAccountAddress'\n            });\n            this._cachedAccountAddress = accountAddress;\n        });\n        this._cacheIsAuthenticated = () => __awaiter(this, void 0, void 0, function* () {\n            const isAuthenticated = yield this._postMessageToChild({\n                method: 'isAuthenticated'\n            });\n            this._cachedIsAuthenticated = isAuthenticated;\n        });\n        // NOTE: to prevent pop-ups from being blocked, there must be no awaits from\n        // click to window.open, meaning value lookups must be cached before the\n        // login method is called.\n        this.login = throttle(() => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilConfigReady();\n            yield this._tilReady();\n            if (!this._cachedIsAuthenticated) {\n                // NOTE: if not logged in to dapp, then proceed to login\n                yield this._signLoginKeyRequest(this._cachedLoginKeyAddress);\n                return this.getAuthenticatedAccount();\n            }\n            else {\n                // only show one already logged in notification at a time\n                if (!this._notificationsMap['loggedIn']) {\n                    this._postMessageToChild({\n                        method: 'notification',\n                        params: {\n                            type: 'success',\n                            message: 'You are logged into Authereum',\n                            timeout: 5e3\n                        }\n                    });\n                    this._notificationsMap['loggedIn'] = true;\n                    setTimeout(() => {\n                        this._notificationsMap['loggedIn'] = null;\n                    }, 5e3);\n                }\n            }\n            // await first\n            const account = yield this.getAuthenticatedAccount();\n            return account;\n        }), 250);\n        this.authenticate = () => __awaiter(this, void 0, void 0, function* () {\n            console.warn('Deprecation notice: `authereum.authenticate()` is deprecated. Use `authereum.login()` instead.');\n            return this.login();\n        });\n        this.isAuthenticated = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'isAuthenticated'\n            }));\n        });\n        this.logout = () => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this._postMessageToChild({\n                method: 'logout'\n            });\n            yield this._resetCache();\n            this.emit('logout', {});\n            return res;\n        });\n        this.getAuthenticatedAccount = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getAuthenticatedAccount'\n            }));\n        });\n        this.getDappKey = () => {\n            return this._handleError(this._postMessageToChild({\n                method: 'getLoginKey'\n            }));\n        };\n        this.getLoginKey = () => {\n            console.warn('Deprecation notice: `authereum.getLoginKey()` is deprecated. Use `authereum.getDappKey()` instead.');\n            return this.getDappKey();\n        };\n        this.signMessage = throttle((message) => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'signMessage',\n                params: message\n            }));\n        }), 250);\n        this.signPersonalMessage = throttle((message) => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'signPersonalMessage',\n                params: message\n            }));\n        }), 250);\n        this.signWithDappKey = throttle((message) => __awaiter(this, void 0, void 0, function* () {\n            console.warn('Deprecation notice: `authereum.signWithDappKey()` is deprecated. Use `authereum.signMess()` instead.');\n            return this.signMessage(message);\n        }), 250);\n        this.signWithLoginKey = throttle((message) => __awaiter(this, void 0, void 0, function* () {\n            console.warn('Deprecation notice: `authereum.signWithLoginKey()` is deprecated. Use `authereum.signWithDappKey()` instead.');\n            return this.signWithDappKey(message);\n        }), 250);\n        this.signTypedMessage = throttle((message) => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'signTypedMessage',\n                params: message\n            }));\n        }), 250);\n        this.signTypedMessageWithDappKey = throttle((message) => __awaiter(this, void 0, void 0, function* () {\n            console.warn('Deprecation notice: `authereum.signTypedMessageWithDappKey()` is deprecated. Use `authereum.signTypedMessage()` instead.');\n            return this.signTypedMessage(message);\n        }), 250);\n        this.signMessageWithAdminKey = throttle((message) => __awaiter(this, void 0, void 0, function* () {\n            console.warn('Deprecated: `authereum.signMessageWithAdminKey()` is deprecated. Use `authereum.signMessageWithSigningKey()` instead.');\n            return null;\n        }), 250);\n        this.signMessageWithSigningKey = throttle((message) => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'signMessageWithSigningKey',\n                params: message\n            }));\n        }), 250);\n        this.getSigningKeyAddress = (message) => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getSigningKeyAddress'\n            }));\n        });\n        this.getLoginKeyAuthSignature = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getLoginKeyAuthSignature'\n            }));\n        });\n        this.getLoginKeyRestrictionsData = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getLoginKeyRestrictionsData'\n            }));\n        });\n        this.getAccountAddress = () => __awaiter(this, void 0, void 0, function* () {\n            // required so it waits for login key to be set\n            yield this._tilReady();\n            return this._handleError(this._postMessageToChild({\n                method: 'getAccountAddress'\n            }));\n        });\n        this.getBalance = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getBalance'\n            }));\n        });\n        this.getRpcUri = () => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilConfigReady();\n            return this._rpcUri;\n        });\n        this.getNetworkId = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getNetworkId'\n            }));\n        });\n        this.getNetworkName = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getNetworkName'\n            }));\n        });\n        this.getProvider = () => {\n            return this._provider;\n        };\n        this._handleError = (promise) => __awaiter(this, void 0, void 0, function* () {\n            return promise\n                .catch((err) => {\n                // NOTE: emit errors but don't throw notification here.\n                this.emit('error', err);\n                // NOTE: rethrow error to let dapps handle error\n                throw err;\n            });\n        });\n        this.signTransaction = throttle((tx) => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilReady();\n            return this._handleError(this._postMessageToChild({\n                method: 'signTransaction',\n                params: serializeMessageObj(tx)\n            }));\n        }), 250);\n        this.signTransactionWithLoginKey = throttle((tx) => __awaiter(this, void 0, void 0, function* () {\n            console.warn('Deprecated: `authereum.signTransactionWithLoginKey()` is deprecated. Use `authereum.signTransaction()` instead.');\n            return this.signTransaction(tx);\n        }), 250);\n        this.sendTransaction = throttle((userTransaction) => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilReady();\n            return this._handleError(this._postMessageToChild({\n                method: 'sendTransaction',\n                params: serializeMessageObj(userTransaction)\n            }));\n        }), 250);\n        this.sendTransactionBatch = throttle((userTransactions) => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilReady();\n            return this._handleError(this._postMessageToChild({\n                method: 'sendTransactionBatch',\n                params: userTransactions.map(serializeMessageObj)\n            }));\n        }), 250);\n        this.estimateGasBatch = throttle((userTransactions) => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilReady();\n            return this._handleError(this._postMessageToChild({\n                method: 'estimateGasBatch',\n                params: userTransactions.map(serializeMessageObj)\n            }));\n        }), 250);\n        this.isReady = () => {\n            return this._iframeReady && this._cacheReady;\n        };\n        this.updateConfig = (config) => {\n            this._userConfig = config;\n            this._setConfig(config);\n        };\n        this.getConfig = () => {\n            return {\n                apiUri: this._apiUri,\n                rpcUri: this._rpcUri,\n                webUri: this._webUri,\n                xsUri: this._xsUri,\n                networkName: this._networkName,\n                networkId: this._networkId,\n                disableNotifications: this._disableNotifications\n            };\n        };\n        this.showWidget = (enabled = true) => __awaiter(this, void 0, void 0, function* () {\n            if (!enabled) {\n                this._widgetEnabled = false;\n                return this._postMessageToChild({\n                    method: 'hideWidget'\n                });\n            }\n            this._widgetEnabled = true;\n            return this._postMessageToChild({\n                method: 'showWidget'\n            });\n        });\n        this.hideWidget = () => __awaiter(this, void 0, void 0, function* () {\n            this._widgetEnabled = false;\n            return this._postMessageToChild({\n                method: 'hideWidget'\n            });\n        });\n        this.widgetEnabled = () => {\n            return this._widgetEnabled;\n        };\n        this.addFunds = (opts) => {\n            return this._postMessageToChild({\n                method: 'addFunds',\n                params: opts\n            });\n        };\n        this._openUrl = (opts = {}) => {\n            const { url, newWindow } = opts;\n            if (newWindow) {\n                window.open(url, '_blank');\n            }\n            else {\n                window.location.href = url;\n            }\n        };\n        this._tilIframeReady = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this._iframeReady) {\n                yield wait(100);\n                return this._tilIframeReady();\n            }\n            yield wait(100);\n            return true;\n        });\n        this._tilConfigReady = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this._configReady) {\n                yield wait(100);\n                return this._tilConfigReady();\n            }\n            yield wait(100);\n            return true;\n        });\n        this._tilReady = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.isReady()) {\n                yield wait(100);\n                return this._tilReady();\n            }\n            yield wait(100);\n            return true;\n        });\n        this._emitReadyEvent = () => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilReady();\n            if (this._readyEmitted)\n                return;\n            this._readyEmitted = true;\n            this.emit('ready', {});\n        });\n        this._connectToChildIframe = () => __awaiter(this, void 0, void 0, function* () {\n            if (this._iframeConnecting) {\n                return this._iframeConnecting;\n            }\n            this._iframeReady = false;\n            this._iframeConnecting = true;\n            const iframe = yield this._getOrCreateMainIframe();\n            this._iframeConnection = penpal.connectToChild({\n                iframe,\n                timeout: 60e3,\n                methods: {\n                    // NOTE: the postMessage penpal method should be the only method that\n                    // exists.\n                    postMessage: (data) => {\n                        return this._handlePostMessage(data);\n                    }\n                }\n            });\n            this._iframeConnecting = new Promise((resolve, reject) => {\n                let timedout = false;\n                const timer = setTimeout(() => {\n                    if (!this._iframeReady) {\n                        timedout = true;\n                        this._iframeConnecting = null;\n                        reject(new Error('timedout'));\n                    }\n                }, 3e3);\n                this._iframeConnection.promise.then((child) => {\n                    clearTimeout(timer);\n                    if (timedout) {\n                        return;\n                    }\n                    this._iframeReady = true;\n                    this._childIframeConnection = child;\n                    this._startHeartbeat();\n                    this._iframeConnecting = null;\n                    resolve();\n                })\n                    .catch((err) => {\n                    clearTimeout(timer);\n                    if (timedout) {\n                        return;\n                    }\n                    reject(err);\n                });\n            });\n            return this._iframeConnecting;\n        });\n        this._startHeartbeat = (reconnect = false) => {\n            if (!this._heartbeatStarted) {\n                this._heartbeat(reconnect);\n                this._heartbeatStarted = true;\n            }\n        };\n        this._heartbeat = (reconnect = false) => __awaiter(this, void 0, void 0, function* () {\n            if (this._destroyed) {\n                return;\n            }\n            yield wait(2e3);\n            try {\n                if (reconnect) {\n                    yield this._connectToChildIframe();\n                    this._backoffTimeout = 1;\n                    return this._heartbeat();\n                }\n                yield this._ping();\n            }\n            catch (err) {\n                // reconnect on destroyed connection error or ping timeout error\n                if (/destroy|timedout/gi.test(err.message)) {\n                    yield wait(this._backoffTimeout * 1e3);\n                    // exponential backoff\n                    this._backoffTimeout = this._backoffTimeout << 1;\n                    return this._heartbeat(true);\n                }\n            }\n            return this._heartbeat();\n        });\n        this._ping = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                let timedout = false;\n                const timer = setTimeout(() => {\n                    timedout = true;\n                }, 5e3);\n                this._postMessageToChild({\n                    method: 'ping'\n                }).then((pong) => {\n                    clearTimeout(timer);\n                    if (timedout) {\n                        reject(new Error('timedout'));\n                        return;\n                    }\n                    if (pong !== 'pong') {\n                        reject(new Error('Invalid response'));\n                        return;\n                    }\n                    resolve(pong);\n                })\n                    .catch(err => {\n                    reject(err);\n                });\n            });\n        });\n        this._injectIframe = (input) => {\n            const { id, url } = input;\n            let parentUrl = window.location.href;\n            try {\n                parentUrl = parent.document.URL;\n            }\n            catch (err) {\n                // noop\n            }\n            const srcUrl = updateQueryParams({ url: parentUrl }, url);\n            const iframe = document.createElement('iframe');\n            iframe.id = id;\n            iframe.src = srcUrl;\n            if (['Safari', 'Firefox'].includes(browserInfo().browser)) {\n                iframe.setAttribute('sandbox', 'allow-storage-access-by-user-activation allow-scripts allow-same-origin');\n            }\n            iframe.style.position = 'fixed';\n            iframe.style.bottom = '0';\n            iframe.style.right = '0';\n            iframe.style.width = '0';\n            iframe.style.height = '0';\n            iframe.style.border = '0';\n            iframe.style.background = 'transparent';\n            iframe.style.zIndex = `${defaultIframeStyle.zIndex}`;\n            iframe.setAttribute('frameborder', '0');\n            iframe.setAttribute('scrolling', 'no');\n            if (this._debug) {\n                iframe.style.outline = '1px solid red';\n            }\n            this._injectedElements.push(iframe);\n            return iframe;\n        };\n        this._getConfigFromChild = () => __awaiter(this, void 0, void 0, function* () {\n            return this._postMessageToChild({\n                method: 'getConfig'\n            });\n        });\n        this._postVersionToChild = () => __awaiter(this, void 0, void 0, function* () {\n            return this._postMessageToChild({\n                method: 'version',\n                params: this.version()\n            });\n        });\n        this._postConfigToChild = () => __awaiter(this, void 0, void 0, function* () {\n            return this._postMessageToChild({\n                method: 'config',\n                params: {\n                    apiKey: this._apiKey,\n                    disableNotifications: this._disableNotifications\n                }\n            });\n        });\n        this._loadAsymmetricEncryptionKeyFromChild = () => __awaiter(this, void 0, void 0, function* () {\n            this._asymmetricEncryptionKey = yield this._postMessageToChild({\n                method: 'getAsymmetricEncryptionKey'\n            });\n        });\n        this._postMessageToChild = (data) => __awaiter(this, void 0, void 0, function* () {\n            if (this._destroyed) {\n                throw new Error('Authereum instance destroyed.');\n            }\n            yield this._tilIframeReady();\n            return this._handleError(this._childIframeConnection.postMessage(data));\n        });\n        this._handleChildLogoutEvent = () => __awaiter(this, void 0, void 0, function* () {\n            yield this._resetCache();\n            this.emit('logout', {});\n        });\n        this._handleChildDappKeyExpired = (loginKeyAddress) => __awaiter(this, void 0, void 0, function* () {\n            if (loginKeyAddress === this._cachedLoginKeyAddress) {\n                yield this._resetCache();\n                this.emit('dappKeyExpired', loginKeyAddress);\n                this.emit('logout');\n            }\n        });\n        this._handlePostMessage = (data) => {\n            try {\n                const { method, params } = data;\n                switch (method) {\n                    case 'onError':\n                        const err = params;\n                        this.emit('error', err);\n                        this._notifier.notify({\n                            type: 'error',\n                            message: err.message\n                        });\n                        return;\n                    case 'onLogout':\n                        return this._handleChildLogoutEvent();\n                    case 'onDappKeyExpired':\n                        return this._handleChildDappKeyExpired(params);\n                    case 'login':\n                        return this.login();\n                    case 'setWidgetPosition':\n                        // const position = params\n                        // const { x, y } = position\n                        // this.iframeStyle.left = x\n                        // this.iframeStyle.top = y\n                        // this._refreshWidget()\n                        return;\n                    case 'setWidgetSize': {\n                        const size = params;\n                        const { width, height } = size;\n                        this._iframeStyle.width = width;\n                        this._iframeStyle.height = height;\n                        return this._refreshWidget();\n                    }\n                    case 'setWidgetStyle': {\n                        const style = params;\n                        for (let key in style) {\n                            this._iframeStyle[key] = style[key];\n                        }\n                        return this._refreshWidget();\n                    }\n                    case 'setNotificationWidgetSize': {\n                        const size = params;\n                        const { width, height } = size;\n                        this._notificationIframeStyle.width = width;\n                        this._notificationIframeStyle.height = height;\n                        return this._refreshNotificationWidget();\n                    }\n                    case 'setNotificationWidgetStyle': {\n                        const style = params;\n                        for (let key in style) {\n                            this._notificationIframeStyle[key] = style[key];\n                        }\n                        return this._refreshNotificationWidget();\n                    }\n                    case 'getWindowSize':\n                        return this._getWindowSize();\n                    case 'hideWidget':\n                        return this.hideWidget();\n                    case 'log':\n                        return this._handlePostMessageLog(params);\n                    case 'openUrl':\n                        return this._openUrl(params);\n                    default:\n                        break;\n                }\n            }\n            catch (err) {\n                // noop\n            }\n        };\n        this._handlePostMessageLog = (data) => {\n            let { type, message } = data;\n            if (!type) {\n                type = 'log';\n            }\n            console[type](message);\n        };\n        this._getWindowSize = () => {\n            return {\n                width: this._getWindowWidth(),\n                height: this._getWindowHeight()\n            };\n        };\n        this._getWindowWidth = () => {\n            return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n        };\n        this._getWindowHeight = () => {\n            return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n        };\n        // public _setIframePositionTop = (y: number) => {\n        // if (!this._iframe) return\n        // this._iframe.style.top = `${y}px`\n        // }\n        this._setIframePositionLeft = (x) => {\n            if (!this._iframe)\n                return;\n            this._iframe.style.left = `${x}px`;\n        };\n        this._setIframeWidth = (width) => {\n            if (!this._iframe)\n                return;\n            this._iframe.style.width = `${width}px`;\n        };\n        this._setIframeHeight = (height) => {\n            if (!this._iframe)\n                return;\n            this._iframe.style.height = `${height}px`;\n        };\n        this._refreshWidget = () => {\n            const { top, left, width, height, zIndex } = this._iframeStyle;\n            if (!this._iframe)\n                return;\n            // this._setIframePositionTop(top)\n            // this._setIframePositionLeft(left)\n            this._setIframeWidth(width);\n            this._setIframeHeight(height);\n            this._iframe.style.zIndex = `${zIndex || 0}`;\n        };\n        this._refreshNotificationWidget = () => {\n            const { top, left, width, height, zIndex } = this._notificationIframeStyle;\n            this._notificationIframe.style.width = `${width}px`;\n            this._notificationIframe.style.height = `${height}px`;\n            this._notificationIframe.style.zIndex = `${zIndex || 0}`;\n        };\n        this._loginKeyExists = () => __awaiter(this, void 0, void 0, function* () {\n            return !!(yield this.getLoginKey());\n        });\n        this._accountAddressExists = () => __awaiter(this, void 0, void 0, function* () {\n            return !!(yield this.getAccountAddress());\n        });\n        this._getAccountAdminKeyNonce = () => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'getAccountAuthKeyNonce'\n            }));\n        });\n        this._getAccountAuthKeyNonce = () => __awaiter(this, void 0, void 0, function* () {\n            console.warn('Deprecation notice: `authereum._getAccountAuthKeyNonce()` is deprecated. Use `authereum._getAccountAdminKeyNonce()` instead.');\n            return this._getAccountAdminKeyNonce();\n        });\n        this._executeLoginKeyMetaTx = (tx) => __awaiter(this, void 0, void 0, function* () {\n            return this._handleError(this._postMessageToChild({\n                method: 'executeLoginKeyMetaTx',\n                params: serializeMessageObj(tx)\n            }));\n        });\n        this._loadLoginKey = (loginKey) => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilReady();\n            return this._handleError(this._postMessageToChild({\n                method: 'loadLoginKey',\n                params: loginKey\n            }));\n        });\n        this._getOrCreateLoginKey = () => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilReady();\n            return this._handleError(this._postMessageToChild({\n                method: 'getOrCreateLoginKey'\n            }));\n        });\n        this._getAuthenticateUri = (loginKeyAddress) => {\n            const encryptionKey = this._asymmetricEncryptionKey;\n            // NOTE: slk = sign login key\n            return this._webUri + '/?slk=' + encodeURIComponent(JSON.stringify({\n                loginKey: {\n                    publicAddress: loginKeyAddress,\n                    // Convert to UTC to avoid local machine timezones\n                    expiresAt: moment().add(1, 'month').utc().unix()\n                },\n                encryptionKey\n            })) + '&redirect_uri=' + this._redirectUri;\n        };\n        this._getSignWithAdminKeyUri = (message) => {\n            if (isBuffer(message)) {\n                message = `0x${message.toString('hex')}`;\n            }\n            // NOTE: sm = sign message\n            return this._webUri + '/?sm=' + encodeURIComponent(JSON.stringify({\n                message\n            })) + '&redirect_uri=' + this._redirectUri;\n        };\n        this._openPopupOrRedirect = (url) => __awaiter(this, void 0, void 0, function* () {\n            this.emit('openPopup', {});\n            const child = window.open(url, 'Authereum', `toolbar=no,\n      location=no,\n      status=no,\n      menubar=no,\n      scrollbars=no,\n      resizable=no,\n      width=470,\n      height=640`);\n            const isBlocked = (child === null || child === undefined);\n            if (isBlocked && !this._blockedPopupRedirect) {\n                const err = new Error('Disable popup blocker and try again');\n                this._notifier.notify({\n                    type: 'error',\n                    message: err.message,\n                    timeout: 5000\n                });\n                throw err;\n            }\n            else if (isBlocked) {\n                this.emit('popupBlocked');\n                // NOTE: if window is blocked then resort to redirect\n                window.location.href = url;\n                return;\n            }\n            child.focus();\n            return new Promise((resolve, reject) => {\n                const interval = setInterval(() => __awaiter(this, void 0, void 0, function* () {\n                    if (child.closed) {\n                        cleanUp();\n                        const err = new Error('Window closed');\n                        this.emit('error', err);\n                        this.emit('closePopup', {});\n                        reject(err);\n                    }\n                }), 250);\n                const timeout = setTimeout(() => {\n                    cleanUp();\n                    child.close();\n                    doneWithError(new Error('Timedout'));\n                }, 10 * 60 * 1000);\n                const cleanUp = () => {\n                    clearInterval(interval);\n                    clearTimeout(timeout);\n                    this.emit('closePopup', {});\n                };\n                const doneWithError = (err) => {\n                    cleanUp();\n                    this.emit('error', err);\n                    reject(err);\n                };\n                const done = (result = {}) => {\n                    cleanUp();\n                    resolve(result);\n                };\n                window.addEventListener('message', (event) => __awaiter(this, void 0, void 0, function* () {\n                    if (event.origin.includes(this._webUri)) {\n                        // this event tells parent to close child popup\n                        if (event.data.close) {\n                            child.close();\n                            done();\n                        }\n                        if (event.data.login) {\n                            done({ success: true });\n                            this.emit('login', {});\n                            this._cachedIsAuthenticated = true;\n                            if (event.data.encryptedSigningKey) {\n                                yield this._loadSigningKey(event.data.encryptedSigningKey);\n                            }\n                            this._logAnalyticsEvent({\n                                eventType: 'logged_in_dapp',\n                                properties: {\n                                    dapp_url: window.location.href\n                                }\n                            });\n                            if (this._redirectUri !== window.location.href) {\n                                window.location.href = this._redirectUri;\n                            }\n                        }\n                        if (event.data.result) {\n                            done(event.data.result);\n                            if (this._redirectUri !== window.location.href) {\n                                window.location.href = this._redirectUri;\n                            }\n                        }\n                        if (event.data.error) {\n                            doneWithError(new Error(event.data.error));\n                            if (this._redirectUri !== window.location.href) {\n                                window.location.href = this._redirectUri;\n                            }\n                        }\n                    }\n                }));\n            });\n        });\n        this._signLoginKeyRequest = (publicAddress) => __awaiter(this, void 0, void 0, function* () {\n            const url = this._getAuthenticateUri(publicAddress);\n            return this._openPopupOrRedirect(url);\n        });\n        this._tilDomReady = () => __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => {\n                if (document.readyState !== 'loading') {\n                    resolve();\n                }\n                else {\n                    document.addEventListener('DOMContentLoaded', () => resolve());\n                }\n            });\n        });\n        // keep both static and normal version methods\n        this.version = () => {\n            return version;\n        };\n        this.isAuthenticatedSync = () => {\n            return this._cachedIsAuthenticated;\n        };\n        this.getTransactionReceipt = (txHash) => {\n            return this._handleError(this._postMessageToChild({\n                method: 'getTransactionReceipt',\n                params: txHash\n            }));\n        };\n        this.waitForTransactionReceipt = (txHash) => {\n            return this._handleError(this._postMessageToChild({\n                method: 'waitForTransactionReceipt',\n                params: txHash\n            }));\n        };\n        this.hasRecoveryEnabled = () => {\n            return this._handleError(this._postMessageToChild({\n                method: 'hasRecoveryEnabled'\n            }));\n        };\n        this.isContractDeployed = (accountAddress) => {\n            return this._handleError(this._postMessageToChild({\n                method: 'isContractDeployed',\n                params: accountAddress\n            }));\n        };\n        this._loadSigningKey = (signingKey) => __awaiter(this, void 0, void 0, function* () {\n            return this._postMessageToChild({\n                method: 'loadSigningKey',\n                params: signingKey\n            });\n        });\n        this._logAnalyticsEvent = (input) => __awaiter(this, void 0, void 0, function* () {\n            return this._postMessageToChild({\n                method: 'logAnalyticsEvent',\n                params: input\n            });\n        });\n        this._setupSigningKey = () => __awaiter(this, void 0, void 0, function* () {\n            yield this._tilReady();\n            const encryptedSigningKey = this._authereumQueryParams['encryptedSigningKey'];\n            if (encryptedSigningKey) {\n                const success = yield this._loadSigningKey(encryptedSigningKey);\n                if (success) {\n                    try {\n                        localStorage.removeItem('_authereum');\n                    }\n                    catch (err) {\n                        // noop\n                    }\n                }\n            }\n        });\n        this._cacheAuthereumQueryParams = () => __awaiter(this, void 0, void 0, function* () {\n            try {\n                const param = getQueryParamValue('_authereum');\n                if (param) {\n                    this._authereumQueryParams = JSON.parse(param);\n                    try {\n                        localStorage.setItem('_authereum', btoa(JSON.stringify(this._authereumQueryParams)));\n                    }\n                    catch (err) {\n                        // noop\n                    }\n                    const newUrl = removeQueryParam('_authereum');\n                    replaceWindowUrl(newUrl);\n                }\n                else {\n                    try {\n                        // load from local storage cache if exists.\n                        // this local storage is cleared after connection.\n                        let cached = localStorage.getItem('_authereum');\n                        if (cached) {\n                            this._authereumQueryParams = JSON.parse(atob(cached));\n                        }\n                    }\n                    catch (err) {\n                        // noop\n                    }\n                }\n            }\n            catch (err) {\n                // noop\n            }\n        });\n        this.destroy = () => __awaiter(this, void 0, void 0, function* () {\n            if (this._destroyed) {\n                console.warn('Authereum instance already destroyed.');\n                return true;\n            }\n            try {\n                if (this._iframeReady) {\n                    yield this._postMessageToChild({\n                        method: 'destroy'\n                    });\n                }\n            }\n            catch (err) {\n                console.error(err);\n            }\n            for (let i = 0; i < this._injectedElements.length; i++) {\n                const element = this._injectedElements[i];\n                try {\n                    element.remove();\n                }\n                catch (err) {\n                    console.error(err);\n                }\n            }\n            const elements = document.querySelectorAll('[id*=\"authereum\"]');\n            for (let i = 0; i < elements.length; i++) {\n                const element = elements[i];\n                try {\n                    element.remove();\n                }\n                catch (err) {\n                    console.error(err);\n                }\n            }\n            this._iframeReady = false;\n            this._destroyed = true;\n            console.warn('Authereum instance destroyed.');\n            this._teardownEventListeners();\n            this.emit('destroy', {});\n            return true;\n        });\n        this.isDestroyed = () => {\n            return this._destroyed;\n        };\n        this.getAddressQrCodeDataUri = (address) => __awaiter(this, void 0, void 0, function* () {\n            return this._postMessageToChild({\n                method: 'getAddressQrCodeDataUri',\n                params: {\n                    address\n                }\n            });\n        });\n        this._loadNotificationsIframe = (url) => __awaiter(this, void 0, void 0, function* () {\n            const id = `authereum__x-notification-iframe--${uuidv4()}`;\n            this._notificationIframe = this._injectIframe({ id, url });\n            this._notificationIframe.style.top = '0';\n            this._notificationIframe.style.right = '0';\n            yield this._tilDomReady();\n            document.body.appendChild(this._notificationIframe);\n        });\n        this._setDebug = (enabled) => __awaiter(this, void 0, void 0, function* () {\n            this._debug = enabled;\n            if (this._debug) {\n                this._iframe.style.outline = '1px solid red';\n                this._notificationIframe.style.outline = '1px solid red';\n            }\n            else {\n                this._iframe.style.outline = '0';\n                this._notificationIframe.style.outline = '0';\n            }\n        });\n        this._userConfig = config;\n        this._init(config);\n    }\n    _setupFocusListener() {\n        window.addEventListener('focus', this._handleWindowFocus, false);\n    }\n    _setupActionKeyListener() {\n        window.addEventListener('keydown', this._handleActionKeyPress, false);\n    }\n    _teardownEventListeners() {\n        window.removeEventListener('resize', this._handleResizeThrottled, false);\n        window.removeEventListener('resize', this._handleResizeDebounced, false);\n        window.removeEventListener('focus', this._handleWindowFocus, false);\n        window.removeEventListener('keydown', this._handleActionKeyPress, false);\n    }\n    _getOrCreateMainIframe() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._iframe) {\n                if (this._iframeConnection) {\n                    this._iframeConnection.destroy();\n                }\n                this._iframe.remove();\n            }\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                const id = `authereum__x-iframe--${uuidv4()}`;\n                this._iframe = this._injectIframe({ id, url: this._xsUri });\n                resolve(this._iframe);\n                yield this._tilDomReady();\n                document.body.appendChild(this._iframe);\n                this._iframe.onload = () => {\n                    this._postVersionToChild();\n                    this._loadAsymmetricEncryptionKeyFromChild();\n                    this._getConfigFromChild()\n                        .then((config) => {\n                        this._loadNotificationsIframe(config.notifierIframeUri);\n                        this._setConfig(config);\n                        this._postConfigToChild();\n                        this._configReady = true;\n                        this.emit('iframeReady', {});\n                    });\n                };\n            }));\n        });\n    }\n}\n// keep both static and normal version methods\nAuthereum.version = () => {\n    return version;\n};\nif (typeof window !== 'undefined') {\n    window.Authereum = Authereum;\n}\n"]},"metadata":{},"sourceType":"module"}