{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst revert_error_1 = require(\"../../revert_error\"); // tslint:disable:max-classes-per-file\n\n\nvar SignatureValidationErrorCodes;\n\n(function (SignatureValidationErrorCodes) {\n  SignatureValidationErrorCodes[SignatureValidationErrorCodes[\"AlwaysInvalid\"] = 0] = \"AlwaysInvalid\";\n  SignatureValidationErrorCodes[SignatureValidationErrorCodes[\"InvalidLength\"] = 1] = \"InvalidLength\";\n  SignatureValidationErrorCodes[SignatureValidationErrorCodes[\"Unsupported\"] = 2] = \"Unsupported\";\n  SignatureValidationErrorCodes[SignatureValidationErrorCodes[\"Illegal\"] = 3] = \"Illegal\";\n  SignatureValidationErrorCodes[SignatureValidationErrorCodes[\"WrongSigner\"] = 4] = \"WrongSigner\";\n})(SignatureValidationErrorCodes = exports.SignatureValidationErrorCodes || (exports.SignatureValidationErrorCodes = {}));\n\nclass SignatureValidationError extends revert_error_1.RevertError {\n  constructor(code, hash, signerAddress, signature) {\n    super('SignatureValidationError', 'SignatureValidationError(uint8 code, bytes32 hash, address signerAddress, bytes signature)', {\n      code,\n      hash,\n      signerAddress,\n      signature\n    });\n  }\n\n}\n\nexports.SignatureValidationError = SignatureValidationError;\nconst types = [SignatureValidationError]; // Register the types we've defined.\n\nfor (const type of types) {\n  revert_error_1.RevertError.registerType(type);\n}","map":{"version":3,"sources":["../../../../src/revert_errors/zero-ex/signature_validator_revert_errors.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,cAAA,GAAA,OAAA,CAAA,oBAAA,CAAA,C,CAEA;;;AAEA,IAAY,6BAAZ;;AAAA,CAAA,UAAY,6BAAZ,EAAyC;AACrC,EAAA,6BAAA,CAAA,6BAAA,CAAA,eAAA,CAAA,GAAA,CAAA,CAAA,GAAA,eAAA;AACA,EAAA,6BAAA,CAAA,6BAAA,CAAA,eAAA,CAAA,GAAA,CAAA,CAAA,GAAA,eAAA;AACA,EAAA,6BAAA,CAAA,6BAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACA,EAAA,6BAAA,CAAA,6BAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,6BAAA,CAAA,6BAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACH,CAND,EAAY,6BAA6B,GAA7B,OAAA,CAAA,6BAAA,KAAA,OAAA,CAAA,6BAAA,GAA6B,EAA7B,CAAZ;;AAQA,MAAa,wBAAb,SAA8C,cAAA,CAAA,WAA9C,CAAyD;AACrD,EAAA,WAAA,CAAY,IAAZ,EAAkD,IAAlD,EAAiE,aAAjE,EAAyF,SAAzF,EAA2G;AACvG,UACI,0BADJ,EAEI,4FAFJ,EAGI;AACI,MAAA,IADJ;AAEI,MAAA,IAFJ;AAGI,MAAA,aAHJ;AAII,MAAA;AAJJ,KAHJ;AAUH;;AAZoD;;AAAzD,OAAA,CAAA,wBAAA,GAAA,wBAAA;AAeA,MAAM,KAAK,GAAG,CAAC,wBAAD,CAAd,C,CAEA;;AACA,KAAK,MAAM,IAAX,IAAmB,KAAnB,EAA0B;AACtB,EAAA,cAAA,CAAA,WAAA,CAAY,YAAZ,CAAyB,IAAzB;AACH","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst revert_error_1 = require(\"../../revert_error\");\n// tslint:disable:max-classes-per-file\nvar SignatureValidationErrorCodes;\n(function (SignatureValidationErrorCodes) {\n    SignatureValidationErrorCodes[SignatureValidationErrorCodes[\"AlwaysInvalid\"] = 0] = \"AlwaysInvalid\";\n    SignatureValidationErrorCodes[SignatureValidationErrorCodes[\"InvalidLength\"] = 1] = \"InvalidLength\";\n    SignatureValidationErrorCodes[SignatureValidationErrorCodes[\"Unsupported\"] = 2] = \"Unsupported\";\n    SignatureValidationErrorCodes[SignatureValidationErrorCodes[\"Illegal\"] = 3] = \"Illegal\";\n    SignatureValidationErrorCodes[SignatureValidationErrorCodes[\"WrongSigner\"] = 4] = \"WrongSigner\";\n})(SignatureValidationErrorCodes = exports.SignatureValidationErrorCodes || (exports.SignatureValidationErrorCodes = {}));\nclass SignatureValidationError extends revert_error_1.RevertError {\n    constructor(code, hash, signerAddress, signature) {\n        super('SignatureValidationError', 'SignatureValidationError(uint8 code, bytes32 hash, address signerAddress, bytes signature)', {\n            code,\n            hash,\n            signerAddress,\n            signature,\n        });\n    }\n}\nexports.SignatureValidationError = SignatureValidationError;\nconst types = [SignatureValidationError];\n// Register the types we've defined.\nfor (const type of types) {\n    revert_error_1.RevertError.registerType(type);\n}\n//# sourceMappingURL=signature_validator_revert_errors.js.map"]},"metadata":{},"sourceType":"module"}