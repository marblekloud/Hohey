{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst revert_error_1 = require(\"../../revert_error\"); // tslint:disable:max-classes-per-file\n\n\nclass NotImplementedError extends revert_error_1.RevertError {\n  constructor(selector) {\n    super('NotImplementedError', 'NotImplementedError(bytes4 selector)', {\n      selector\n    });\n  }\n\n}\n\nexports.NotImplementedError = NotImplementedError;\n\nclass InvalidBootstrapCallerError extends revert_error_1.RevertError {\n  constructor(caller, expectedCaller) {\n    super('InvalidBootstrapCallerError', 'InvalidBootstrapCallerError(address caller, address expectedCaller)', {\n      caller,\n      expectedCaller\n    });\n  }\n\n}\n\nexports.InvalidBootstrapCallerError = InvalidBootstrapCallerError;\n\nclass InvalidDieCallerError extends revert_error_1.RevertError {\n  constructor(caller, expectedCaller) {\n    super('InvalidDieCallerError', 'InvalidDieCallerError(address caller, address expectedCaller)', {\n      caller,\n      expectedCaller\n    });\n  }\n\n}\n\nexports.InvalidDieCallerError = InvalidDieCallerError;\n\nclass BootstrapCallFailedError extends revert_error_1.RevertError {\n  constructor(target, resultData) {\n    super('BootstrapCallFailedError', 'BootstrapCallFailedError(address target, bytes resultData)', {\n      target,\n      resultData\n    });\n  }\n\n}\n\nexports.BootstrapCallFailedError = BootstrapCallFailedError;\nconst types = [BootstrapCallFailedError, InvalidBootstrapCallerError, InvalidDieCallerError, NotImplementedError]; // Register the types we've defined.\n\nfor (const type of types) {\n  revert_error_1.RevertError.registerType(type);\n}","map":{"version":3,"sources":["../../../../src/revert_errors/zero-ex/proxy_revert_errors.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,cAAA,GAAA,OAAA,CAAA,oBAAA,CAAA,C,CAEA;;;AACA,MAAa,mBAAb,SAAyC,cAAA,CAAA,WAAzC,CAAoD;AAChD,EAAA,WAAA,CAAY,QAAZ,EAA6B;AACzB,UAAM,qBAAN,EAA6B,sCAA7B,EAAqE;AACjE,MAAA;AADiE,KAArE;AAGH;;AAL+C;;AAApD,OAAA,CAAA,mBAAA,GAAA,mBAAA;;AAQA,MAAa,2BAAb,SAAiD,cAAA,CAAA,WAAjD,CAA4D;AACxD,EAAA,WAAA,CAAY,MAAZ,EAA6B,cAA7B,EAAoD;AAChD,UAAM,6BAAN,EAAqC,qEAArC,EAA4G;AACxG,MAAA,MADwG;AAExG,MAAA;AAFwG,KAA5G;AAIH;;AANuD;;AAA5D,OAAA,CAAA,2BAAA,GAAA,2BAAA;;AASA,MAAa,qBAAb,SAA2C,cAAA,CAAA,WAA3C,CAAsD;AAClD,EAAA,WAAA,CAAY,MAAZ,EAA6B,cAA7B,EAAoD;AAChD,UAAM,uBAAN,EAA+B,+DAA/B,EAAgG;AAC5F,MAAA,MAD4F;AAE5F,MAAA;AAF4F,KAAhG;AAIH;;AANiD;;AAAtD,OAAA,CAAA,qBAAA,GAAA,qBAAA;;AASA,MAAa,wBAAb,SAA8C,cAAA,CAAA,WAA9C,CAAyD;AACrD,EAAA,WAAA,CAAY,MAAZ,EAA6B,UAA7B,EAAgD;AAC5C,UAAM,0BAAN,EAAkC,4DAAlC,EAAgG;AAC5F,MAAA,MAD4F;AAE5F,MAAA;AAF4F,KAAhG;AAIH;;AANoD;;AAAzD,OAAA,CAAA,wBAAA,GAAA,wBAAA;AASA,MAAM,KAAK,GAAG,CAAC,wBAAD,EAA2B,2BAA3B,EAAwD,qBAAxD,EAA+E,mBAA/E,CAAd,C,CAEA;;AACA,KAAK,MAAM,IAAX,IAAmB,KAAnB,EAA0B;AACtB,EAAA,cAAA,CAAA,WAAA,CAAY,YAAZ,CAAyB,IAAzB;AACH","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst revert_error_1 = require(\"../../revert_error\");\n// tslint:disable:max-classes-per-file\nclass NotImplementedError extends revert_error_1.RevertError {\n    constructor(selector) {\n        super('NotImplementedError', 'NotImplementedError(bytes4 selector)', {\n            selector,\n        });\n    }\n}\nexports.NotImplementedError = NotImplementedError;\nclass InvalidBootstrapCallerError extends revert_error_1.RevertError {\n    constructor(caller, expectedCaller) {\n        super('InvalidBootstrapCallerError', 'InvalidBootstrapCallerError(address caller, address expectedCaller)', {\n            caller,\n            expectedCaller,\n        });\n    }\n}\nexports.InvalidBootstrapCallerError = InvalidBootstrapCallerError;\nclass InvalidDieCallerError extends revert_error_1.RevertError {\n    constructor(caller, expectedCaller) {\n        super('InvalidDieCallerError', 'InvalidDieCallerError(address caller, address expectedCaller)', {\n            caller,\n            expectedCaller,\n        });\n    }\n}\nexports.InvalidDieCallerError = InvalidDieCallerError;\nclass BootstrapCallFailedError extends revert_error_1.RevertError {\n    constructor(target, resultData) {\n        super('BootstrapCallFailedError', 'BootstrapCallFailedError(address target, bytes resultData)', {\n            target,\n            resultData,\n        });\n    }\n}\nexports.BootstrapCallFailedError = BootstrapCallFailedError;\nconst types = [BootstrapCallFailedError, InvalidBootstrapCallerError, InvalidDieCallerError, NotImplementedError];\n// Register the types we've defined.\nfor (const type of types) {\n    revert_error_1.RevertError.registerType(type);\n}\n//# sourceMappingURL=proxy_revert_errors.js.map"]},"metadata":{},"sourceType":"module"}