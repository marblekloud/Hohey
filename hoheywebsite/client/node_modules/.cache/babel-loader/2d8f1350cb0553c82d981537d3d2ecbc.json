{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst revert_error_1 = require(\"../../revert_error\"); // tslint:disable:max-classes-per-file\n\n\nvar SignatureErrorCodes;\n\n(function (SignatureErrorCodes) {\n  SignatureErrorCodes[SignatureErrorCodes[\"InvalidLength\"] = 0] = \"InvalidLength\";\n  SignatureErrorCodes[SignatureErrorCodes[\"Unsupported\"] = 1] = \"Unsupported\";\n  SignatureErrorCodes[SignatureErrorCodes[\"Illegal\"] = 2] = \"Illegal\";\n  SignatureErrorCodes[SignatureErrorCodes[\"Invalid\"] = 3] = \"Invalid\";\n})(SignatureErrorCodes = exports.SignatureErrorCodes || (exports.SignatureErrorCodes = {}));\n\nclass SignatureError extends revert_error_1.RevertError {\n  constructor(errorCode, hash, signature) {\n    super('SignatureError', 'SignatureError(uint8 errorCode, bytes32 hash, bytes signature)', {\n      errorCode,\n      hash,\n      signature\n    });\n  }\n\n}\n\nexports.SignatureError = SignatureError;\n\nclass InvalidOriginError extends revert_error_1.RevertError {\n  constructor(expectedOrigin) {\n    super('InvalidOriginError', 'InvalidOriginError(address expectedOrigin)', {\n      expectedOrigin\n    });\n  }\n\n}\n\nexports.InvalidOriginError = InvalidOriginError;\n\nclass ApprovalExpiredError extends revert_error_1.RevertError {\n  constructor(transactionHash, approvalExpirationTime) {\n    super('ApprovalExpiredError', 'ApprovalExpiredError(bytes32 transactionHash, uint256 approvalExpirationTime)', {\n      transactionHash,\n      approvalExpirationTime\n    });\n  }\n\n}\n\nexports.ApprovalExpiredError = ApprovalExpiredError;\n\nclass InvalidApprovalSignatureError extends revert_error_1.RevertError {\n  constructor(transactionHash, approverAddress) {\n    super('InvalidApprovalSignatureError', 'InvalidApprovalSignatureError(bytes32 transactionHash, address approverAddress)', {\n      transactionHash,\n      approverAddress\n    });\n  }\n\n}\n\nexports.InvalidApprovalSignatureError = InvalidApprovalSignatureError;\nconst types = [SignatureError, InvalidOriginError, ApprovalExpiredError, InvalidApprovalSignatureError]; // Register the types we've defined.\n\nfor (const type of types) {\n  revert_error_1.RevertError.registerType(type);\n}","map":{"version":3,"sources":["../../../../src/revert_errors/coordinator/revert_errors.ts"],"names":[],"mappings":";;;;;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,oBAAA,CAAA,C,CAEA;;;AAEA,IAAY,mBAAZ;;AAAA,CAAA,UAAY,mBAAZ,EAA+B;AAC3B,EAAA,mBAAA,CAAA,mBAAA,CAAA,eAAA,CAAA,GAAA,CAAA,CAAA,GAAA,eAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,aAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACA,EAAA,mBAAA,CAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACH,CALD,EAAY,mBAAmB,GAAnB,OAAA,CAAA,mBAAA,KAAA,OAAA,CAAA,mBAAA,GAAmB,EAAnB,CAAZ;;AAOA,MAAa,cAAb,SAAoC,cAAA,CAAA,WAApC,CAA+C;AAC3C,EAAA,WAAA,CAAY,SAAZ,EAA6C,IAA7C,EAA4D,SAA5D,EAA8E;AAC1E,UAAM,gBAAN,EAAwB,gEAAxB,EAA0F;AACtF,MAAA,SADsF;AAEtF,MAAA,IAFsF;AAGtF,MAAA;AAHsF,KAA1F;AAKH;;AAP0C;;AAA/C,OAAA,CAAA,cAAA,GAAA,cAAA;;AAUA,MAAa,kBAAb,SAAwC,cAAA,CAAA,WAAxC,CAAmD;AAC/C,EAAA,WAAA,CAAY,cAAZ,EAAmC;AAC/B,UAAM,oBAAN,EAA4B,4CAA5B,EAA0E;AAAE,MAAA;AAAF,KAA1E;AACH;;AAH8C;;AAAnD,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAMA,MAAa,oBAAb,SAA0C,cAAA,CAAA,WAA1C,CAAqD;AACjD,EAAA,WAAA,CAAY,eAAZ,EAAsC,sBAAtC,EAA0F;AACtF,UAAM,sBAAN,EAA8B,+EAA9B,EAA+G;AAC3G,MAAA,eAD2G;AAE3G,MAAA;AAF2G,KAA/G;AAIH;;AANgD;;AAArD,OAAA,CAAA,oBAAA,GAAA,oBAAA;;AASA,MAAa,6BAAb,SAAmD,cAAA,CAAA,WAAnD,CAA8D;AAC1D,EAAA,WAAA,CAAY,eAAZ,EAAsC,eAAtC,EAA8D;AAC1D,UACI,+BADJ,EAEI,iFAFJ,EAGI;AAAE,MAAA,eAAF;AAAmB,MAAA;AAAnB,KAHJ;AAKH;;AAPyD;;AAA9D,OAAA,CAAA,6BAAA,GAAA,6BAAA;AAUA,MAAM,KAAK,GAAG,CAAC,cAAD,EAAiB,kBAAjB,EAAqC,oBAArC,EAA2D,6BAA3D,CAAd,C,CAEA;;AACA,KAAK,MAAM,IAAX,IAAmB,KAAnB,EAA0B;AACtB,EAAA,cAAA,CAAA,WAAA,CAAY,YAAZ,CAAyB,IAAzB;AACH","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst revert_error_1 = require(\"../../revert_error\");\n// tslint:disable:max-classes-per-file\nvar SignatureErrorCodes;\n(function (SignatureErrorCodes) {\n    SignatureErrorCodes[SignatureErrorCodes[\"InvalidLength\"] = 0] = \"InvalidLength\";\n    SignatureErrorCodes[SignatureErrorCodes[\"Unsupported\"] = 1] = \"Unsupported\";\n    SignatureErrorCodes[SignatureErrorCodes[\"Illegal\"] = 2] = \"Illegal\";\n    SignatureErrorCodes[SignatureErrorCodes[\"Invalid\"] = 3] = \"Invalid\";\n})(SignatureErrorCodes = exports.SignatureErrorCodes || (exports.SignatureErrorCodes = {}));\nclass SignatureError extends revert_error_1.RevertError {\n    constructor(errorCode, hash, signature) {\n        super('SignatureError', 'SignatureError(uint8 errorCode, bytes32 hash, bytes signature)', {\n            errorCode,\n            hash,\n            signature,\n        });\n    }\n}\nexports.SignatureError = SignatureError;\nclass InvalidOriginError extends revert_error_1.RevertError {\n    constructor(expectedOrigin) {\n        super('InvalidOriginError', 'InvalidOriginError(address expectedOrigin)', { expectedOrigin });\n    }\n}\nexports.InvalidOriginError = InvalidOriginError;\nclass ApprovalExpiredError extends revert_error_1.RevertError {\n    constructor(transactionHash, approvalExpirationTime) {\n        super('ApprovalExpiredError', 'ApprovalExpiredError(bytes32 transactionHash, uint256 approvalExpirationTime)', {\n            transactionHash,\n            approvalExpirationTime,\n        });\n    }\n}\nexports.ApprovalExpiredError = ApprovalExpiredError;\nclass InvalidApprovalSignatureError extends revert_error_1.RevertError {\n    constructor(transactionHash, approverAddress) {\n        super('InvalidApprovalSignatureError', 'InvalidApprovalSignatureError(bytes32 transactionHash, address approverAddress)', { transactionHash, approverAddress });\n    }\n}\nexports.InvalidApprovalSignatureError = InvalidApprovalSignatureError;\nconst types = [SignatureError, InvalidOriginError, ApprovalExpiredError, InvalidApprovalSignatureError];\n// Register the types we've defined.\nfor (const type of types) {\n    revert_error_1.RevertError.registerType(type);\n}\n//# sourceMappingURL=revert_errors.js.map"]},"metadata":{},"sourceType":"module"}