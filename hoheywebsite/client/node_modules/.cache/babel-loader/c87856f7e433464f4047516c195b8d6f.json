{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst revert_error_1 = require(\"../../revert_error\"); // tslint:disable:max-classes-per-file\n\n\nclass InvalidFromAddressError extends revert_error_1.RevertError {\n  constructor(from) {\n    super('InvalidFromAddressError', 'InvalidFromAddressError(address from)', {\n      from\n    });\n  }\n\n}\n\nexports.InvalidFromAddressError = InvalidFromAddressError;\n\nclass AmountsLengthMustEqualOneError extends revert_error_1.RevertError {\n  constructor(amountsLength) {\n    super('AmountsLengthMustEqualOneError', 'AmountsLengthMustEqualOneError(uint256 amountsLength)', {\n      amountsLength\n    });\n  }\n\n}\n\nexports.AmountsLengthMustEqualOneError = AmountsLengthMustEqualOneError;\n\nclass TooFewBrokerAssetsProvidedError extends revert_error_1.RevertError {\n  constructor(numBrokeredAssets) {\n    super('TooFewBrokerAssetsProvidedError', 'TooFewBrokerAssetsProvidedError(uint256 numBrokeredAssets)', {\n      numBrokeredAssets\n    });\n  }\n\n}\n\nexports.TooFewBrokerAssetsProvidedError = TooFewBrokerAssetsProvidedError;\n\nclass InvalidFunctionSelectorError extends revert_error_1.RevertError {\n  constructor(selector) {\n    super('InvalidFunctionSelectorError', 'InvalidFunctionSelectorError(bytes4 selector)', {\n      selector\n    });\n  }\n\n}\n\nexports.InvalidFunctionSelectorError = InvalidFunctionSelectorError;\n\nclass OnlyERC1155ProxyError extends revert_error_1.RevertError {\n  constructor(sender) {\n    super('OnlyERC1155ProxyError', 'OnlyERC1155ProxyError(address sender)', {\n      sender\n    });\n  }\n\n}\n\nexports.OnlyERC1155ProxyError = OnlyERC1155ProxyError;\nconst types = [InvalidFromAddressError, AmountsLengthMustEqualOneError, TooFewBrokerAssetsProvidedError, InvalidFunctionSelectorError, OnlyERC1155ProxyError]; // Register the types we've defined.\n\nfor (const type of types) {\n  revert_error_1.RevertError.registerType(type);\n}","map":{"version":3,"sources":["../../../../src/revert_errors/broker/revert_errors.ts"],"names":[],"mappings":";;;;;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,oBAAA,CAAA,C,CAEA;;;AAEA,MAAa,uBAAb,SAA6C,cAAA,CAAA,WAA7C,CAAwD;AACpD,EAAA,WAAA,CAAY,IAAZ,EAAyB;AACrB,UAAM,yBAAN,EAAiC,uCAAjC,EAA0E;AAAE,MAAA;AAAF,KAA1E;AACH;;AAHmD;;AAAxD,OAAA,CAAA,uBAAA,GAAA,uBAAA;;AAMA,MAAa,8BAAb,SAAoD,cAAA,CAAA,WAApD,CAA+D;AAC3D,EAAA,WAAA,CAAY,aAAZ,EAAuD;AACnD,UAAM,gCAAN,EAAwC,uDAAxC,EAAiG;AAC7F,MAAA;AAD6F,KAAjG;AAGH;;AAL0D;;AAA/D,OAAA,CAAA,8BAAA,GAAA,8BAAA;;AAQA,MAAa,+BAAb,SAAqD,cAAA,CAAA,WAArD,CAAgE;AAC5D,EAAA,WAAA,CAAY,iBAAZ,EAA2D;AACvD,UAAM,iCAAN,EAAyC,4DAAzC,EAAuG;AACnG,MAAA;AADmG,KAAvG;AAGH;;AAL2D;;AAAhE,OAAA,CAAA,+BAAA,GAAA,+BAAA;;AAQA,MAAa,4BAAb,SAAkD,cAAA,CAAA,WAAlD,CAA6D;AACzD,EAAA,WAAA,CAAY,QAAZ,EAA6B;AACzB,UAAM,8BAAN,EAAsC,+CAAtC,EAAuF;AAAE,MAAA;AAAF,KAAvF;AACH;;AAHwD;;AAA7D,OAAA,CAAA,4BAAA,GAAA,4BAAA;;AAMA,MAAa,qBAAb,SAA2C,cAAA,CAAA,WAA3C,CAAsD;AAClD,EAAA,WAAA,CAAY,MAAZ,EAA2B;AACvB,UAAM,uBAAN,EAA+B,uCAA/B,EAAwE;AAAE,MAAA;AAAF,KAAxE;AACH;;AAHiD;;AAAtD,OAAA,CAAA,qBAAA,GAAA,qBAAA;AAMA,MAAM,KAAK,GAAG,CACV,uBADU,EAEV,8BAFU,EAGV,+BAHU,EAIV,4BAJU,EAKV,qBALU,CAAd,C,CAQA;;AACA,KAAK,MAAM,IAAX,IAAmB,KAAnB,EAA0B;AACtB,EAAA,cAAA,CAAA,WAAA,CAAY,YAAZ,CAAyB,IAAzB;AACH","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst revert_error_1 = require(\"../../revert_error\");\n// tslint:disable:max-classes-per-file\nclass InvalidFromAddressError extends revert_error_1.RevertError {\n    constructor(from) {\n        super('InvalidFromAddressError', 'InvalidFromAddressError(address from)', { from });\n    }\n}\nexports.InvalidFromAddressError = InvalidFromAddressError;\nclass AmountsLengthMustEqualOneError extends revert_error_1.RevertError {\n    constructor(amountsLength) {\n        super('AmountsLengthMustEqualOneError', 'AmountsLengthMustEqualOneError(uint256 amountsLength)', {\n            amountsLength,\n        });\n    }\n}\nexports.AmountsLengthMustEqualOneError = AmountsLengthMustEqualOneError;\nclass TooFewBrokerAssetsProvidedError extends revert_error_1.RevertError {\n    constructor(numBrokeredAssets) {\n        super('TooFewBrokerAssetsProvidedError', 'TooFewBrokerAssetsProvidedError(uint256 numBrokeredAssets)', {\n            numBrokeredAssets,\n        });\n    }\n}\nexports.TooFewBrokerAssetsProvidedError = TooFewBrokerAssetsProvidedError;\nclass InvalidFunctionSelectorError extends revert_error_1.RevertError {\n    constructor(selector) {\n        super('InvalidFunctionSelectorError', 'InvalidFunctionSelectorError(bytes4 selector)', { selector });\n    }\n}\nexports.InvalidFunctionSelectorError = InvalidFunctionSelectorError;\nclass OnlyERC1155ProxyError extends revert_error_1.RevertError {\n    constructor(sender) {\n        super('OnlyERC1155ProxyError', 'OnlyERC1155ProxyError(address sender)', { sender });\n    }\n}\nexports.OnlyERC1155ProxyError = OnlyERC1155ProxyError;\nconst types = [\n    InvalidFromAddressError,\n    AmountsLengthMustEqualOneError,\n    TooFewBrokerAssetsProvidedError,\n    InvalidFunctionSelectorError,\n    OnlyERC1155ProxyError,\n];\n// Register the types we've defined.\nfor (const type of types) {\n    revert_error_1.RevertError.registerType(type);\n}\n//# sourceMappingURL=revert_errors.js.map"]},"metadata":{},"sourceType":"module"}