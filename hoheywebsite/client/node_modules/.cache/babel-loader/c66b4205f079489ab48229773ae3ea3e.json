{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst configured_bignumber_1 = require(\"./configured_bignumber\"); // tslint:disable:custom-no-magic-numbers\n\n/**\n * Convert a token unit amount to weis. E.g., 10.1 ETH -> 10100000000000000000.\n */\n\n\nfunction fromTokenUnitAmount(units, decimals = 18) {\n  return new configured_bignumber_1.BigNumber(units).times(new configured_bignumber_1.BigNumber(10).pow(decimals)).integerValue();\n}\n\nexports.fromTokenUnitAmount = fromTokenUnitAmount;\n/**\n * Convert a wei amount to token units. E.g., 10100000000000000000 -> 10.1 ETH.\n */\n\nfunction toTokenUnitAmount(weis, decimals = 18) {\n  return new configured_bignumber_1.BigNumber(weis).div(new configured_bignumber_1.BigNumber(10).pow(decimals));\n}\n\nexports.toTokenUnitAmount = toTokenUnitAmount;","map":{"version":3,"sources":["../../src/token_utils.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,sBAAA,GAAA,OAAA,CAAA,wBAAA,CAAA,C,CAGA;;AAEA;;AAEG;;;AACH,SAAgB,mBAAhB,CAAoC,KAApC,EAAsD,QAAA,GAAmB,EAAzE,EAA2E;AACvE,SAAO,IAAI,sBAAA,CAAA,SAAJ,CAAc,KAAd,EAAqB,KAArB,CAA2B,IAAI,sBAAA,CAAA,SAAJ,CAAc,EAAd,EAAkB,GAAlB,CAAsB,QAAtB,CAA3B,EAA4D,YAA5D,EAAP;AACH;;AAFD,OAAA,CAAA,mBAAA,GAAA,mBAAA;AAIA;;AAEG;;AACH,SAAgB,iBAAhB,CAAkC,IAAlC,EAAmD,QAAA,GAAmB,EAAtE,EAAwE;AACpE,SAAO,IAAI,sBAAA,CAAA,SAAJ,CAAc,IAAd,EAAoB,GAApB,CAAwB,IAAI,sBAAA,CAAA,SAAJ,CAAc,EAAd,EAAkB,GAAlB,CAAsB,QAAtB,CAAxB,CAAP;AACH;;AAFD,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst configured_bignumber_1 = require(\"./configured_bignumber\");\n// tslint:disable:custom-no-magic-numbers\n/**\n * Convert a token unit amount to weis. E.g., 10.1 ETH -> 10100000000000000000.\n */\nfunction fromTokenUnitAmount(units, decimals = 18) {\n    return new configured_bignumber_1.BigNumber(units).times(new configured_bignumber_1.BigNumber(10).pow(decimals)).integerValue();\n}\nexports.fromTokenUnitAmount = fromTokenUnitAmount;\n/**\n * Convert a wei amount to token units. E.g., 10100000000000000000 -> 10.1 ETH.\n */\nfunction toTokenUnitAmount(weis, decimals = 18) {\n    return new configured_bignumber_1.BigNumber(weis).div(new configured_bignumber_1.BigNumber(10).pow(decimals));\n}\nexports.toTokenUnitAmount = toTokenUnitAmount;\n//# sourceMappingURL=token_utils.js.map"]},"metadata":{},"sourceType":"module"}