{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport Authereum from './AuthereumSDK'; // NOTE: https://github.com/blocknative/onboard/issues/214#issuecomment-629880691\n\nconst ethers = require('ethers'); // NOTE: https://stackoverflow.com/a/61922437/1439168\n\n\nexport default class AuthereumSigner extends ethers['Signer'] {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.authereum = new Authereum(this.config);\n    this.provider = this.authereum.getProvider();\n  }\n\n  getAddress() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.authereum.getAccountAddress();\n    });\n  }\n\n  signMessage(message) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.provider.sign(message);\n    });\n  }\n\n  sign(transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.provider.sign(transaction);\n    });\n  }\n\n  sendTransaction(transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.provider.sendTransaction(transaction);\n    });\n  }\n\n  sendTransactionBatch(transactions) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.provider.sendTransactionBatch(transactions);\n    });\n  }\n\n  estimateGasBatch(transactions) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.provider.estimateGasBatch(transactions);\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/kelvinho/Documents/Coding/HoHey-main 4 2/hoheywebsite/client/src/example/node_modules/authereum/dist/AuthereumSigner.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Authereum","ethers","require","AuthereumSigner","constructor","config","authereum","provider","getProvider","getAddress","getAccountAddress","signMessage","message","sign","transaction","sendTransaction","sendTransactionBatch","transactions","estimateGasBatch"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Authereum from './AuthereumSDK';\n// NOTE: https://github.com/blocknative/onboard/issues/214#issuecomment-629880691\nconst ethers = require('ethers');\n// NOTE: https://stackoverflow.com/a/61922437/1439168\nexport default class AuthereumSigner extends ethers['Signer'] {\n    constructor(config) {\n        super();\n        this.config = config || {};\n        this.authereum = new Authereum(this.config);\n        this.provider = this.authereum.getProvider();\n    }\n    getAddress() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.authereum.getAccountAddress();\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.provider.sign(message);\n        });\n    }\n    sign(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.provider.sign(transaction);\n        });\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.provider.sendTransaction(transaction);\n        });\n    }\n    sendTransactionBatch(transactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.provider.sendTransactionBatch(transactions);\n        });\n    }\n    estimateGasBatch(transactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.provider.estimateGasBatch(transactions);\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}