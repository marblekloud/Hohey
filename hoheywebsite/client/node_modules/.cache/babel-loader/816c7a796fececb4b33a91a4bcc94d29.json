{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst revert_error_1 = require(\"../../revert_error\"); // tslint:disable:max-classes-per-file\n\n\nclass UnsupportedAssetProxyError extends revert_error_1.RevertError {\n  constructor(proxyId) {\n    super('UnsupportedAssetProxyError', 'UnsupportedAssetProxyError(bytes4 proxyId)', {\n      proxyId\n    });\n  }\n\n}\n\nexports.UnsupportedAssetProxyError = UnsupportedAssetProxyError;\n\nclass Erc721AmountMustEqualOneError extends revert_error_1.RevertError {\n  constructor(amount) {\n    super('Erc721AmountMustEqualOneError', 'Erc721AmountMustEqualOneError(uint256 amount)', {\n      amount\n    });\n  }\n\n}\n\nexports.Erc721AmountMustEqualOneError = Erc721AmountMustEqualOneError;\nconst types = [UnsupportedAssetProxyError, Erc721AmountMustEqualOneError]; // Register the types we've defined.\n\nfor (const type of types) {\n  revert_error_1.RevertError.registerType(type);\n}","map":{"version":3,"sources":["../../../../src/revert_errors/extensions/lib_asset_data_transfer_revert_errors.ts"],"names":[],"mappings":";;;;;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,oBAAA,CAAA,C,CAEA;;;AAEA,MAAa,0BAAb,SAAgD,cAAA,CAAA,WAAhD,CAA2D;AACvD,EAAA,WAAA,CAAY,OAAZ,EAA4B;AACxB,UAAM,4BAAN,EAAoC,4CAApC,EAAkF;AAAE,MAAA;AAAF,KAAlF;AACH;;AAHsD;;AAA3D,OAAA,CAAA,0BAAA,GAAA,0BAAA;;AAMA,MAAa,6BAAb,SAAmD,cAAA,CAAA,WAAnD,CAA8D;AAC1D,EAAA,WAAA,CAAY,MAAZ,EAAgD;AAC5C,UAAM,+BAAN,EAAuC,+CAAvC,EAAwF;AACpF,MAAA;AADoF,KAAxF;AAGH;;AALyD;;AAA9D,OAAA,CAAA,6BAAA,GAAA,6BAAA;AAQA,MAAM,KAAK,GAAG,CAAC,0BAAD,EAA6B,6BAA7B,CAAd,C,CAEA;;AACA,KAAK,MAAM,IAAX,IAAmB,KAAnB,EAA0B;AACtB,EAAA,cAAA,CAAA,WAAA,CAAY,YAAZ,CAAyB,IAAzB;AACH","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst revert_error_1 = require(\"../../revert_error\");\n// tslint:disable:max-classes-per-file\nclass UnsupportedAssetProxyError extends revert_error_1.RevertError {\n    constructor(proxyId) {\n        super('UnsupportedAssetProxyError', 'UnsupportedAssetProxyError(bytes4 proxyId)', { proxyId });\n    }\n}\nexports.UnsupportedAssetProxyError = UnsupportedAssetProxyError;\nclass Erc721AmountMustEqualOneError extends revert_error_1.RevertError {\n    constructor(amount) {\n        super('Erc721AmountMustEqualOneError', 'Erc721AmountMustEqualOneError(uint256 amount)', {\n            amount,\n        });\n    }\n}\nexports.Erc721AmountMustEqualOneError = Erc721AmountMustEqualOneError;\nconst types = [UnsupportedAssetProxyError, Erc721AmountMustEqualOneError];\n// Register the types we've defined.\nfor (const type of types) {\n    revert_error_1.RevertError.registerType(type);\n}\n//# sourceMappingURL=lib_asset_data_transfer_revert_errors.js.map"]},"metadata":{},"sourceType":"module"}