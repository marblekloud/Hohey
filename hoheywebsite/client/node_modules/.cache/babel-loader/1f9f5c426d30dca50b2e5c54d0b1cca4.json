{"ast":null,"code":"import Web3 from \"web3\"; // https://github.com/MetaMask/faq/blob/master/DEVELOPERS.md\n\nexport async function unlockAccount() {\n  // @ts-ignore\n  const {\n    ethereum\n  } = window;\n\n  if (!ethereum) {\n    throw new Error(\"Web3 not found\");\n  }\n\n  const web3 = new Web3(ethereum);\n  await ethereum.enable();\n  const accounts = await web3.eth.getAccounts();\n  return {\n    web3,\n    account: accounts[0] || \"\"\n  };\n}\nexport function subscribeToAccount(web3, callback) {\n  const id = setInterval(async () => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      callback(null, accounts[0]);\n    } catch (error) {\n      callback(error, null);\n    }\n  }, 1000);\n  return () => {\n    clearInterval(id);\n  };\n}\nexport function subscribeToNetId(web3, callback) {\n  const id = setInterval(async () => {\n    try {\n      const netId = await web3.eth.net.getId();\n      callback(null, netId);\n    } catch (error) {\n      callback(error, null);\n    }\n  }, 1000);\n  return () => {\n    clearInterval(id);\n  };\n}","map":{"version":3,"sources":["/Users/kelvinho/Documents/Coding/HoHey-main 4 2/hoheywebsite/client/src/api/web3.ts"],"names":["Web3","unlockAccount","ethereum","window","Error","web3","enable","accounts","eth","getAccounts","account","subscribeToAccount","callback","id","setInterval","error","clearInterval","subscribeToNetId","netId","net","getId"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB,C,CAEA;;AACA,OAAO,eAAeC,aAAf,GAA+B;AACpC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeC,MAArB;;AAEA,MAAI,CAACD,QAAL,EAAe;AACb,UAAM,IAAIE,KAAJ,CAAU,gBAAV,CAAN;AACD;;AAED,QAAMC,IAAI,GAAG,IAAIL,IAAJ,CAASE,QAAT,CAAb;AACA,QAAMA,QAAQ,CAACI,MAAT,EAAN;AAEA,QAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASC,WAAT,EAAvB;AAEA,SAAO;AAAEJ,IAAAA,IAAF;AAAQK,IAAAA,OAAO,EAAEH,QAAQ,CAAC,CAAD,CAAR,IAAe;AAAhC,GAAP;AACD;AAED,OAAO,SAASI,kBAAT,CACLN,IADK,EAELO,QAFK,EAGL;AACA,QAAMC,EAAE,GAAGC,WAAW,CAAC,YAAY;AACjC,QAAI;AACF,YAAMP,QAAQ,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASC,WAAT,EAAvB;AACAG,MAAAA,QAAQ,CAAC,IAAD,EAAOL,QAAQ,CAAC,CAAD,CAAf,CAAR;AACD,KAHD,CAGE,OAAOQ,KAAP,EAAc;AACdH,MAAAA,QAAQ,CAACG,KAAD,EAAQ,IAAR,CAAR;AACD;AACF,GAPqB,EAOnB,IAPmB,CAAtB;AASA,SAAO,MAAM;AACXC,IAAAA,aAAa,CAACH,EAAD,CAAb;AACD,GAFD;AAGD;AAED,OAAO,SAASI,gBAAT,CACLZ,IADK,EAELO,QAFK,EAGL;AACA,QAAMC,EAAE,GAAGC,WAAW,CAAC,YAAY;AACjC,QAAI;AACF,YAAMI,KAAK,GAAG,MAAMb,IAAI,CAACG,GAAL,CAASW,GAAT,CAAaC,KAAb,EAApB;AACAR,MAAAA,QAAQ,CAAC,IAAD,EAAOM,KAAP,CAAR;AACD,KAHD,CAGE,OAAOH,KAAP,EAAc;AACdH,MAAAA,QAAQ,CAACG,KAAD,EAAQ,IAAR,CAAR;AACD;AACF,GAPqB,EAOnB,IAPmB,CAAtB;AASA,SAAO,MAAM;AACXC,IAAAA,aAAa,CAACH,EAAD,CAAb;AACD,GAFD;AAGD","sourcesContent":["import Web3 from \"web3\";\n\n// https://github.com/MetaMask/faq/blob/master/DEVELOPERS.md\nexport async function unlockAccount() {\n  // @ts-ignore\n  const { ethereum } = window;\n\n  if (!ethereum) {\n    throw new Error(\"Web3 not found\");\n  }\n\n  const web3 = new Web3(ethereum);\n  await ethereum.enable();\n\n  const accounts = await web3.eth.getAccounts();\n\n  return { web3, account: accounts[0] || \"\" };\n}\n\nexport function subscribeToAccount(\n  web3: Web3,\n  callback: (error: Error | null, account: string | null) => any\n) {\n  const id = setInterval(async () => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      callback(null, accounts[0]);\n    } catch (error) {\n      callback(error, null);\n    }\n  }, 1000);\n\n  return () => {\n    clearInterval(id);\n  };\n}\n\nexport function subscribeToNetId(\n  web3: Web3,\n  callback: (error: Error | null, netId: number | null) => any\n) {\n  const id = setInterval(async () => {\n    try {\n      const netId = await web3.eth.net.getId();\n      callback(null, netId);\n    } catch (error) {\n      callback(error, null);\n    }\n  }, 1000);\n\n  return () => {\n    clearInterval(id);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}