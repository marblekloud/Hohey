{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst revert_error_1 = require(\"../../revert_error\"); // tslint:disable:max-classes-per-file\n\n\nclass AuthorizedAddressMismatchError extends revert_error_1.RevertError {\n  constructor(authorized, target) {\n    super('AuthorizedAddressMismatchError', 'AuthorizedAddressMismatchError(address authorized, address target)', {\n      authorized,\n      target\n    });\n  }\n\n}\n\nexports.AuthorizedAddressMismatchError = AuthorizedAddressMismatchError;\n\nclass IndexOutOfBoundsError extends revert_error_1.RevertError {\n  constructor(index, len) {\n    super('IndexOutOfBoundsError', 'IndexOutOfBoundsError(uint256 index, uint256 len)', {\n      index,\n      len\n    });\n  }\n\n}\n\nexports.IndexOutOfBoundsError = IndexOutOfBoundsError;\n\nclass SenderNotAuthorizedError extends revert_error_1.RevertError {\n  constructor(sender) {\n    super('SenderNotAuthorizedError', 'SenderNotAuthorizedError(address sender)', {\n      sender\n    });\n  }\n\n}\n\nexports.SenderNotAuthorizedError = SenderNotAuthorizedError;\n\nclass TargetAlreadyAuthorizedError extends revert_error_1.RevertError {\n  constructor(target) {\n    super('TargetAlreadyAuthorizedError', 'TargetAlreadyAuthorizedError(address target)', {\n      target\n    });\n  }\n\n}\n\nexports.TargetAlreadyAuthorizedError = TargetAlreadyAuthorizedError;\n\nclass TargetNotAuthorizedError extends revert_error_1.RevertError {\n  constructor(target) {\n    super('TargetNotAuthorizedError', 'TargetNotAuthorizedError(address target)', {\n      target\n    });\n  }\n\n}\n\nexports.TargetNotAuthorizedError = TargetNotAuthorizedError;\n\nclass ZeroCantBeAuthorizedError extends revert_error_1.RevertError {\n  constructor() {\n    super('ZeroCantBeAuthorizedError', 'ZeroCantBeAuthorizedError()', {});\n  }\n\n}\n\nexports.ZeroCantBeAuthorizedError = ZeroCantBeAuthorizedError;\nconst types = [AuthorizedAddressMismatchError, IndexOutOfBoundsError, SenderNotAuthorizedError, TargetAlreadyAuthorizedError, TargetNotAuthorizedError, ZeroCantBeAuthorizedError]; // Register the types we've defined.\n\nfor (const type of types) {\n  revert_error_1.RevertError.registerType(type);\n}","map":{"version":3,"sources":["../../../../src/revert_errors/utils/authorizable_revert_errors.ts"],"names":[],"mappings":";;;;;;AACA,MAAA,cAAA,GAAA,OAAA,CAAA,oBAAA,CAAA,C,CAEA;;;AACA,MAAa,8BAAb,SAAoD,cAAA,CAAA,WAApD,CAA+D;AAC3D,EAAA,WAAA,CAAY,UAAZ,EAAiC,MAAjC,EAAgD;AAC5C,UAAM,gCAAN,EAAwC,oEAAxC,EAA8G;AAC1G,MAAA,UAD0G;AAE1G,MAAA;AAF0G,KAA9G;AAIH;;AAN0D;;AAA/D,OAAA,CAAA,8BAAA,GAAA,8BAAA;;AASA,MAAa,qBAAb,SAA2C,cAAA,CAAA,WAA3C,CAAsD;AAClD,EAAA,WAAA,CAAY,KAAZ,EAA+B,GAA/B,EAA8C;AAC1C,UAAM,uBAAN,EAA+B,mDAA/B,EAAoF;AAAE,MAAA,KAAF;AAAS,MAAA;AAAT,KAApF;AACH;;AAHiD;;AAAtD,OAAA,CAAA,qBAAA,GAAA,qBAAA;;AAMA,MAAa,wBAAb,SAA8C,cAAA,CAAA,WAA9C,CAAyD;AACrD,EAAA,WAAA,CAAY,MAAZ,EAA2B;AACvB,UAAM,0BAAN,EAAkC,0CAAlC,EAA8E;AAAE,MAAA;AAAF,KAA9E;AACH;;AAHoD;;AAAzD,OAAA,CAAA,wBAAA,GAAA,wBAAA;;AAMA,MAAa,4BAAb,SAAkD,cAAA,CAAA,WAAlD,CAA6D;AACzD,EAAA,WAAA,CAAY,MAAZ,EAA2B;AACvB,UAAM,8BAAN,EAAsC,8CAAtC,EAAsF;AAAE,MAAA;AAAF,KAAtF;AACH;;AAHwD;;AAA7D,OAAA,CAAA,4BAAA,GAAA,4BAAA;;AAMA,MAAa,wBAAb,SAA8C,cAAA,CAAA,WAA9C,CAAyD;AACrD,EAAA,WAAA,CAAY,MAAZ,EAA2B;AACvB,UAAM,0BAAN,EAAkC,0CAAlC,EAA8E;AAAE,MAAA;AAAF,KAA9E;AACH;;AAHoD;;AAAzD,OAAA,CAAA,wBAAA,GAAA,wBAAA;;AAMA,MAAa,yBAAb,SAA+C,cAAA,CAAA,WAA/C,CAA0D;AACtD,EAAA,WAAA,GAAA;AACI,UAAM,2BAAN,EAAmC,6BAAnC,EAAkE,EAAlE;AACH;;AAHqD;;AAA1D,OAAA,CAAA,yBAAA,GAAA,yBAAA;AAMA,MAAM,KAAK,GAAG,CACV,8BADU,EAEV,qBAFU,EAGV,wBAHU,EAIV,4BAJU,EAKV,wBALU,EAMV,yBANU,CAAd,C,CASA;;AACA,KAAK,MAAM,IAAX,IAAmB,KAAnB,EAA0B;AACtB,EAAA,cAAA,CAAA,WAAA,CAAY,YAAZ,CAAyB,IAAzB;AACH","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst revert_error_1 = require(\"../../revert_error\");\n// tslint:disable:max-classes-per-file\nclass AuthorizedAddressMismatchError extends revert_error_1.RevertError {\n    constructor(authorized, target) {\n        super('AuthorizedAddressMismatchError', 'AuthorizedAddressMismatchError(address authorized, address target)', {\n            authorized,\n            target,\n        });\n    }\n}\nexports.AuthorizedAddressMismatchError = AuthorizedAddressMismatchError;\nclass IndexOutOfBoundsError extends revert_error_1.RevertError {\n    constructor(index, len) {\n        super('IndexOutOfBoundsError', 'IndexOutOfBoundsError(uint256 index, uint256 len)', { index, len });\n    }\n}\nexports.IndexOutOfBoundsError = IndexOutOfBoundsError;\nclass SenderNotAuthorizedError extends revert_error_1.RevertError {\n    constructor(sender) {\n        super('SenderNotAuthorizedError', 'SenderNotAuthorizedError(address sender)', { sender });\n    }\n}\nexports.SenderNotAuthorizedError = SenderNotAuthorizedError;\nclass TargetAlreadyAuthorizedError extends revert_error_1.RevertError {\n    constructor(target) {\n        super('TargetAlreadyAuthorizedError', 'TargetAlreadyAuthorizedError(address target)', { target });\n    }\n}\nexports.TargetAlreadyAuthorizedError = TargetAlreadyAuthorizedError;\nclass TargetNotAuthorizedError extends revert_error_1.RevertError {\n    constructor(target) {\n        super('TargetNotAuthorizedError', 'TargetNotAuthorizedError(address target)', { target });\n    }\n}\nexports.TargetNotAuthorizedError = TargetNotAuthorizedError;\nclass ZeroCantBeAuthorizedError extends revert_error_1.RevertError {\n    constructor() {\n        super('ZeroCantBeAuthorizedError', 'ZeroCantBeAuthorizedError()', {});\n    }\n}\nexports.ZeroCantBeAuthorizedError = ZeroCantBeAuthorizedError;\nconst types = [\n    AuthorizedAddressMismatchError,\n    IndexOutOfBoundsError,\n    SenderNotAuthorizedError,\n    TargetAlreadyAuthorizedError,\n    TargetNotAuthorizedError,\n    ZeroCantBeAuthorizedError,\n];\n// Register the types we've defined.\nfor (const type of types) {\n    revert_error_1.RevertError.registerType(type);\n}\n//# sourceMappingURL=authorizable_revert_errors.js.map"]},"metadata":{},"sourceType":"module"}