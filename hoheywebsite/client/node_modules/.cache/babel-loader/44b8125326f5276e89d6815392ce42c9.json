{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst revert_error_1 = require(\"../../revert_error\"); // tslint:disable:max-classes-per-file\n\n\nvar BatchMatchOrdersErrorCodes;\n\n(function (BatchMatchOrdersErrorCodes) {\n  BatchMatchOrdersErrorCodes[BatchMatchOrdersErrorCodes[\"ZeroLeftOrders\"] = 0] = \"ZeroLeftOrders\";\n  BatchMatchOrdersErrorCodes[BatchMatchOrdersErrorCodes[\"ZeroRightOrders\"] = 1] = \"ZeroRightOrders\";\n  BatchMatchOrdersErrorCodes[BatchMatchOrdersErrorCodes[\"InvalidLengthLeftSignatures\"] = 2] = \"InvalidLengthLeftSignatures\";\n  BatchMatchOrdersErrorCodes[BatchMatchOrdersErrorCodes[\"InvalidLengthRightSignatures\"] = 3] = \"InvalidLengthRightSignatures\";\n})(BatchMatchOrdersErrorCodes = exports.BatchMatchOrdersErrorCodes || (exports.BatchMatchOrdersErrorCodes = {}));\n\nvar ExchangeContextErrorCodes;\n\n(function (ExchangeContextErrorCodes) {\n  ExchangeContextErrorCodes[ExchangeContextErrorCodes[\"InvalidMaker\"] = 0] = \"InvalidMaker\";\n  ExchangeContextErrorCodes[ExchangeContextErrorCodes[\"InvalidTaker\"] = 1] = \"InvalidTaker\";\n  ExchangeContextErrorCodes[ExchangeContextErrorCodes[\"InvalidSender\"] = 2] = \"InvalidSender\";\n})(ExchangeContextErrorCodes = exports.ExchangeContextErrorCodes || (exports.ExchangeContextErrorCodes = {}));\n\nvar FillErrorCode;\n\n(function (FillErrorCode) {\n  FillErrorCode[FillErrorCode[\"InvalidTakerAmount\"] = 0] = \"InvalidTakerAmount\";\n  FillErrorCode[FillErrorCode[\"TakerOverpay\"] = 1] = \"TakerOverpay\";\n  FillErrorCode[FillErrorCode[\"Overfill\"] = 2] = \"Overfill\";\n  FillErrorCode[FillErrorCode[\"InvalidFillPrice\"] = 3] = \"InvalidFillPrice\";\n})(FillErrorCode = exports.FillErrorCode || (exports.FillErrorCode = {}));\n\nvar SignatureErrorCode;\n\n(function (SignatureErrorCode) {\n  SignatureErrorCode[SignatureErrorCode[\"BadOrderSignature\"] = 0] = \"BadOrderSignature\";\n  SignatureErrorCode[SignatureErrorCode[\"BadTransactionSignature\"] = 1] = \"BadTransactionSignature\";\n  SignatureErrorCode[SignatureErrorCode[\"InvalidLength\"] = 2] = \"InvalidLength\";\n  SignatureErrorCode[SignatureErrorCode[\"Unsupported\"] = 3] = \"Unsupported\";\n  SignatureErrorCode[SignatureErrorCode[\"Illegal\"] = 4] = \"Illegal\";\n  SignatureErrorCode[SignatureErrorCode[\"InappropriateSignatureType\"] = 5] = \"InappropriateSignatureType\";\n  SignatureErrorCode[SignatureErrorCode[\"InvalidSigner\"] = 6] = \"InvalidSigner\";\n})(SignatureErrorCode = exports.SignatureErrorCode || (exports.SignatureErrorCode = {}));\n\nvar AssetProxyDispatchErrorCode;\n\n(function (AssetProxyDispatchErrorCode) {\n  AssetProxyDispatchErrorCode[AssetProxyDispatchErrorCode[\"InvalidAssetDataLength\"] = 0] = \"InvalidAssetDataLength\";\n  AssetProxyDispatchErrorCode[AssetProxyDispatchErrorCode[\"UnknownAssetProxy\"] = 1] = \"UnknownAssetProxy\";\n})(AssetProxyDispatchErrorCode = exports.AssetProxyDispatchErrorCode || (exports.AssetProxyDispatchErrorCode = {}));\n\nvar TransactionErrorCode;\n\n(function (TransactionErrorCode) {\n  TransactionErrorCode[TransactionErrorCode[\"AlreadyExecuted\"] = 0] = \"AlreadyExecuted\";\n  TransactionErrorCode[TransactionErrorCode[\"Expired\"] = 1] = \"Expired\";\n})(TransactionErrorCode = exports.TransactionErrorCode || (exports.TransactionErrorCode = {}));\n\nvar IncompleteFillErrorCode;\n\n(function (IncompleteFillErrorCode) {\n  IncompleteFillErrorCode[IncompleteFillErrorCode[\"IncompleteMarketBuyOrders\"] = 0] = \"IncompleteMarketBuyOrders\";\n  IncompleteFillErrorCode[IncompleteFillErrorCode[\"IncompleteMarketSellOrders\"] = 1] = \"IncompleteMarketSellOrders\";\n  IncompleteFillErrorCode[IncompleteFillErrorCode[\"IncompleteFillOrder\"] = 2] = \"IncompleteFillOrder\";\n})(IncompleteFillErrorCode = exports.IncompleteFillErrorCode || (exports.IncompleteFillErrorCode = {}));\n\nclass BatchMatchOrdersError extends revert_error_1.RevertError {\n  constructor(error) {\n    super('BatchMatchOrdersError', 'BatchMatchOrdersError(uint8 error)', {\n      error\n    });\n  }\n\n}\n\nexports.BatchMatchOrdersError = BatchMatchOrdersError;\n\nclass SignatureError extends revert_error_1.RevertError {\n  constructor(error, hash, signer, signature) {\n    super('SignatureError', 'SignatureError(uint8 error, bytes32 hash, address signer, bytes signature)', {\n      error,\n      hash,\n      signer,\n      signature\n    });\n  }\n\n}\n\nexports.SignatureError = SignatureError;\n\nclass SignatureValidatorNotApprovedError extends revert_error_1.RevertError {\n  constructor(signer, validator) {\n    super('SignatureValidatorNotApprovedError', 'SignatureValidatorNotApprovedError(address signer, address validator)', {\n      signer,\n      validator\n    });\n  }\n\n}\n\nexports.SignatureValidatorNotApprovedError = SignatureValidatorNotApprovedError;\n\nclass SignatureWalletError extends revert_error_1.RevertError {\n  constructor(hash, wallet, signature, errorData) {\n    super('SignatureWalletError', 'SignatureWalletError(bytes32 hash, address wallet, bytes signature, bytes errorData)', {\n      hash,\n      wallet,\n      signature,\n      errorData\n    });\n  }\n\n}\n\nexports.SignatureWalletError = SignatureWalletError;\n\nclass EIP1271SignatureError extends revert_error_1.RevertError {\n  constructor(verifyingContract, data, signature, errorData) {\n    super('EIP1271SignatureError', 'EIP1271SignatureError(address verifyingContract, bytes data, bytes signature, bytes errorData)', {\n      verifyingContract,\n      data,\n      signature,\n      errorData\n    });\n  }\n\n}\n\nexports.EIP1271SignatureError = EIP1271SignatureError;\n\nclass OrderStatusError extends revert_error_1.RevertError {\n  constructor(orderHash, status) {\n    super('OrderStatusError', 'OrderStatusError(bytes32 orderHash, uint8 status)', {\n      orderHash,\n      status\n    });\n  }\n\n}\n\nexports.OrderStatusError = OrderStatusError;\n\nclass FillError extends revert_error_1.RevertError {\n  constructor(error, orderHash) {\n    super('FillError', 'FillError(uint8 error, bytes32 orderHash)', {\n      error,\n      orderHash\n    });\n  }\n\n}\n\nexports.FillError = FillError;\n\nclass OrderEpochError extends revert_error_1.RevertError {\n  constructor(maker, sender, currentEpoch) {\n    super('OrderEpochError', 'OrderEpochError(address maker, address sender, uint256 currentEpoch)', {\n      maker,\n      sender,\n      currentEpoch\n    });\n  }\n\n}\n\nexports.OrderEpochError = OrderEpochError;\n\nclass AssetProxyExistsError extends revert_error_1.RevertError {\n  constructor(assetProxyId, assetProxy) {\n    super('AssetProxyExistsError', 'AssetProxyExistsError(bytes4 assetProxyId, address assetProxy)', {\n      assetProxyId,\n      assetProxy\n    });\n  }\n\n}\n\nexports.AssetProxyExistsError = AssetProxyExistsError;\n\nclass AssetProxyDispatchError extends revert_error_1.RevertError {\n  constructor(error, orderHash, assetData) {\n    super('AssetProxyDispatchError', 'AssetProxyDispatchError(uint8 error, bytes32 orderHash, bytes assetData)', {\n      error,\n      orderHash,\n      assetData\n    });\n  }\n\n}\n\nexports.AssetProxyDispatchError = AssetProxyDispatchError;\n\nclass AssetProxyTransferError extends revert_error_1.RevertError {\n  constructor(orderHash, assetData, errorData) {\n    super('AssetProxyTransferError', 'AssetProxyTransferError(bytes32 orderHash, bytes assetData, bytes errorData)', {\n      orderHash,\n      assetData,\n      errorData\n    });\n  }\n\n}\n\nexports.AssetProxyTransferError = AssetProxyTransferError;\n\nclass NegativeSpreadError extends revert_error_1.RevertError {\n  constructor(leftOrderHash, rightOrderHash) {\n    super('NegativeSpreadError', 'NegativeSpreadError(bytes32 leftOrderHash, bytes32 rightOrderHash)', {\n      leftOrderHash,\n      rightOrderHash\n    });\n  }\n\n}\n\nexports.NegativeSpreadError = NegativeSpreadError;\n\nclass TransactionError extends revert_error_1.RevertError {\n  constructor(error, transactionHash) {\n    super('TransactionError', 'TransactionError(uint8 error, bytes32 transactionHash)', {\n      error,\n      transactionHash\n    });\n  }\n\n}\n\nexports.TransactionError = TransactionError;\n\nclass TransactionExecutionError extends revert_error_1.RevertError {\n  constructor(transactionHash, errorData) {\n    super('TransactionExecutionError', 'TransactionExecutionError(bytes32 transactionHash, bytes errorData)', {\n      transactionHash,\n      errorData\n    });\n  }\n\n}\n\nexports.TransactionExecutionError = TransactionExecutionError;\n\nclass TransactionGasPriceError extends revert_error_1.RevertError {\n  constructor(transactionHash, actualGasPrice, requiredGasPrice) {\n    super('TransactionGasPriceError', 'TransactionGasPriceError(bytes32 transactionHash, uint256 actualGasPrice, uint256 requiredGasPrice)', {\n      transactionHash,\n      actualGasPrice,\n      requiredGasPrice\n    });\n  }\n\n}\n\nexports.TransactionGasPriceError = TransactionGasPriceError;\n\nclass TransactionInvalidContextError extends revert_error_1.RevertError {\n  constructor(transactionHash, currentContextAddress) {\n    super('TransactionInvalidContextError', 'TransactionInvalidContextError(bytes32 transactionHash, address currentContextAddress)', {\n      transactionHash,\n      currentContextAddress\n    });\n  }\n\n}\n\nexports.TransactionInvalidContextError = TransactionInvalidContextError;\n\nclass IncompleteFillError extends revert_error_1.RevertError {\n  constructor(error, expectedAssetFillAmount, actualAssetFillAmount) {\n    super('IncompleteFillError', 'IncompleteFillError(uint8 error, uint256 expectedAssetFillAmount, uint256 actualAssetFillAmount)', {\n      error,\n      expectedAssetFillAmount,\n      actualAssetFillAmount\n    });\n  }\n\n}\n\nexports.IncompleteFillError = IncompleteFillError;\n\nclass ExchangeInvalidContextError extends revert_error_1.RevertError {\n  constructor(error, orderHash, contextAddress) {\n    super('ExchangeInvalidContextError', 'ExchangeInvalidContextError(uint8 error, bytes32 orderHash, address contextAddress)', {\n      error,\n      orderHash,\n      contextAddress\n    });\n  }\n\n}\n\nexports.ExchangeInvalidContextError = ExchangeInvalidContextError;\n\nclass PayProtocolFeeError extends revert_error_1.RevertError {\n  constructor(orderHash, protocolFee, makerAddress, takerAddress, errorData) {\n    super('PayProtocolFeeError', 'PayProtocolFeeError(bytes32 orderHash, uint256 protocolFee, address makerAddress, address takerAddress, bytes errorData)', {\n      orderHash,\n      protocolFee,\n      makerAddress,\n      takerAddress,\n      errorData\n    });\n  }\n\n}\n\nexports.PayProtocolFeeError = PayProtocolFeeError;\nconst types = [AssetProxyExistsError, AssetProxyDispatchError, AssetProxyTransferError, BatchMatchOrdersError, EIP1271SignatureError, ExchangeInvalidContextError, FillError, IncompleteFillError, NegativeSpreadError, OrderEpochError, OrderStatusError, PayProtocolFeeError, SignatureError, SignatureValidatorNotApprovedError, SignatureWalletError, TransactionError, TransactionExecutionError, TransactionGasPriceError, TransactionInvalidContextError]; // Register the types we've defined.\n\nfor (const type of types) {\n  revert_error_1.RevertError.registerType(type);\n}","map":{"version":3,"sources":["../../../../src/revert_errors/exchange/revert_errors.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst revert_error_1 = require(\"../../revert_error\");\n// tslint:disable:max-classes-per-file\nvar BatchMatchOrdersErrorCodes;\n(function (BatchMatchOrdersErrorCodes) {\n    BatchMatchOrdersErrorCodes[BatchMatchOrdersErrorCodes[\"ZeroLeftOrders\"] = 0] = \"ZeroLeftOrders\";\n    BatchMatchOrdersErrorCodes[BatchMatchOrdersErrorCodes[\"ZeroRightOrders\"] = 1] = \"ZeroRightOrders\";\n    BatchMatchOrdersErrorCodes[BatchMatchOrdersErrorCodes[\"InvalidLengthLeftSignatures\"] = 2] = \"InvalidLengthLeftSignatures\";\n    BatchMatchOrdersErrorCodes[BatchMatchOrdersErrorCodes[\"InvalidLengthRightSignatures\"] = 3] = \"InvalidLengthRightSignatures\";\n})(BatchMatchOrdersErrorCodes = exports.BatchMatchOrdersErrorCodes || (exports.BatchMatchOrdersErrorCodes = {}));\nvar ExchangeContextErrorCodes;\n(function (ExchangeContextErrorCodes) {\n    ExchangeContextErrorCodes[ExchangeContextErrorCodes[\"InvalidMaker\"] = 0] = \"InvalidMaker\";\n    ExchangeContextErrorCodes[ExchangeContextErrorCodes[\"InvalidTaker\"] = 1] = \"InvalidTaker\";\n    ExchangeContextErrorCodes[ExchangeContextErrorCodes[\"InvalidSender\"] = 2] = \"InvalidSender\";\n})(ExchangeContextErrorCodes = exports.ExchangeContextErrorCodes || (exports.ExchangeContextErrorCodes = {}));\nvar FillErrorCode;\n(function (FillErrorCode) {\n    FillErrorCode[FillErrorCode[\"InvalidTakerAmount\"] = 0] = \"InvalidTakerAmount\";\n    FillErrorCode[FillErrorCode[\"TakerOverpay\"] = 1] = \"TakerOverpay\";\n    FillErrorCode[FillErrorCode[\"Overfill\"] = 2] = \"Overfill\";\n    FillErrorCode[FillErrorCode[\"InvalidFillPrice\"] = 3] = \"InvalidFillPrice\";\n})(FillErrorCode = exports.FillErrorCode || (exports.FillErrorCode = {}));\nvar SignatureErrorCode;\n(function (SignatureErrorCode) {\n    SignatureErrorCode[SignatureErrorCode[\"BadOrderSignature\"] = 0] = \"BadOrderSignature\";\n    SignatureErrorCode[SignatureErrorCode[\"BadTransactionSignature\"] = 1] = \"BadTransactionSignature\";\n    SignatureErrorCode[SignatureErrorCode[\"InvalidLength\"] = 2] = \"InvalidLength\";\n    SignatureErrorCode[SignatureErrorCode[\"Unsupported\"] = 3] = \"Unsupported\";\n    SignatureErrorCode[SignatureErrorCode[\"Illegal\"] = 4] = \"Illegal\";\n    SignatureErrorCode[SignatureErrorCode[\"InappropriateSignatureType\"] = 5] = \"InappropriateSignatureType\";\n    SignatureErrorCode[SignatureErrorCode[\"InvalidSigner\"] = 6] = \"InvalidSigner\";\n})(SignatureErrorCode = exports.SignatureErrorCode || (exports.SignatureErrorCode = {}));\nvar AssetProxyDispatchErrorCode;\n(function (AssetProxyDispatchErrorCode) {\n    AssetProxyDispatchErrorCode[AssetProxyDispatchErrorCode[\"InvalidAssetDataLength\"] = 0] = \"InvalidAssetDataLength\";\n    AssetProxyDispatchErrorCode[AssetProxyDispatchErrorCode[\"UnknownAssetProxy\"] = 1] = \"UnknownAssetProxy\";\n})(AssetProxyDispatchErrorCode = exports.AssetProxyDispatchErrorCode || (exports.AssetProxyDispatchErrorCode = {}));\nvar TransactionErrorCode;\n(function (TransactionErrorCode) {\n    TransactionErrorCode[TransactionErrorCode[\"AlreadyExecuted\"] = 0] = \"AlreadyExecuted\";\n    TransactionErrorCode[TransactionErrorCode[\"Expired\"] = 1] = \"Expired\";\n})(TransactionErrorCode = exports.TransactionErrorCode || (exports.TransactionErrorCode = {}));\nvar IncompleteFillErrorCode;\n(function (IncompleteFillErrorCode) {\n    IncompleteFillErrorCode[IncompleteFillErrorCode[\"IncompleteMarketBuyOrders\"] = 0] = \"IncompleteMarketBuyOrders\";\n    IncompleteFillErrorCode[IncompleteFillErrorCode[\"IncompleteMarketSellOrders\"] = 1] = \"IncompleteMarketSellOrders\";\n    IncompleteFillErrorCode[IncompleteFillErrorCode[\"IncompleteFillOrder\"] = 2] = \"IncompleteFillOrder\";\n})(IncompleteFillErrorCode = exports.IncompleteFillErrorCode || (exports.IncompleteFillErrorCode = {}));\nclass BatchMatchOrdersError extends revert_error_1.RevertError {\n    constructor(error) {\n        super('BatchMatchOrdersError', 'BatchMatchOrdersError(uint8 error)', { error });\n    }\n}\nexports.BatchMatchOrdersError = BatchMatchOrdersError;\nclass SignatureError extends revert_error_1.RevertError {\n    constructor(error, hash, signer, signature) {\n        super('SignatureError', 'SignatureError(uint8 error, bytes32 hash, address signer, bytes signature)', {\n            error,\n            hash,\n            signer,\n            signature,\n        });\n    }\n}\nexports.SignatureError = SignatureError;\nclass SignatureValidatorNotApprovedError extends revert_error_1.RevertError {\n    constructor(signer, validator) {\n        super('SignatureValidatorNotApprovedError', 'SignatureValidatorNotApprovedError(address signer, address validator)', {\n            signer,\n            validator,\n        });\n    }\n}\nexports.SignatureValidatorNotApprovedError = SignatureValidatorNotApprovedError;\nclass SignatureWalletError extends revert_error_1.RevertError {\n    constructor(hash, wallet, signature, errorData) {\n        super('SignatureWalletError', 'SignatureWalletError(bytes32 hash, address wallet, bytes signature, bytes errorData)', {\n            hash,\n            wallet,\n            signature,\n            errorData,\n        });\n    }\n}\nexports.SignatureWalletError = SignatureWalletError;\nclass EIP1271SignatureError extends revert_error_1.RevertError {\n    constructor(verifyingContract, data, signature, errorData) {\n        super('EIP1271SignatureError', 'EIP1271SignatureError(address verifyingContract, bytes data, bytes signature, bytes errorData)', {\n            verifyingContract,\n            data,\n            signature,\n            errorData,\n        });\n    }\n}\nexports.EIP1271SignatureError = EIP1271SignatureError;\nclass OrderStatusError extends revert_error_1.RevertError {\n    constructor(orderHash, status) {\n        super('OrderStatusError', 'OrderStatusError(bytes32 orderHash, uint8 status)', { orderHash, status });\n    }\n}\nexports.OrderStatusError = OrderStatusError;\nclass FillError extends revert_error_1.RevertError {\n    constructor(error, orderHash) {\n        super('FillError', 'FillError(uint8 error, bytes32 orderHash)', { error, orderHash });\n    }\n}\nexports.FillError = FillError;\nclass OrderEpochError extends revert_error_1.RevertError {\n    constructor(maker, sender, currentEpoch) {\n        super('OrderEpochError', 'OrderEpochError(address maker, address sender, uint256 currentEpoch)', {\n            maker,\n            sender,\n            currentEpoch,\n        });\n    }\n}\nexports.OrderEpochError = OrderEpochError;\nclass AssetProxyExistsError extends revert_error_1.RevertError {\n    constructor(assetProxyId, assetProxy) {\n        super('AssetProxyExistsError', 'AssetProxyExistsError(bytes4 assetProxyId, address assetProxy)', {\n            assetProxyId,\n            assetProxy,\n        });\n    }\n}\nexports.AssetProxyExistsError = AssetProxyExistsError;\nclass AssetProxyDispatchError extends revert_error_1.RevertError {\n    constructor(error, orderHash, assetData) {\n        super('AssetProxyDispatchError', 'AssetProxyDispatchError(uint8 error, bytes32 orderHash, bytes assetData)', {\n            error,\n            orderHash,\n            assetData,\n        });\n    }\n}\nexports.AssetProxyDispatchError = AssetProxyDispatchError;\nclass AssetProxyTransferError extends revert_error_1.RevertError {\n    constructor(orderHash, assetData, errorData) {\n        super('AssetProxyTransferError', 'AssetProxyTransferError(bytes32 orderHash, bytes assetData, bytes errorData)', {\n            orderHash,\n            assetData,\n            errorData,\n        });\n    }\n}\nexports.AssetProxyTransferError = AssetProxyTransferError;\nclass NegativeSpreadError extends revert_error_1.RevertError {\n    constructor(leftOrderHash, rightOrderHash) {\n        super('NegativeSpreadError', 'NegativeSpreadError(bytes32 leftOrderHash, bytes32 rightOrderHash)', {\n            leftOrderHash,\n            rightOrderHash,\n        });\n    }\n}\nexports.NegativeSpreadError = NegativeSpreadError;\nclass TransactionError extends revert_error_1.RevertError {\n    constructor(error, transactionHash) {\n        super('TransactionError', 'TransactionError(uint8 error, bytes32 transactionHash)', { error, transactionHash });\n    }\n}\nexports.TransactionError = TransactionError;\nclass TransactionExecutionError extends revert_error_1.RevertError {\n    constructor(transactionHash, errorData) {\n        super('TransactionExecutionError', 'TransactionExecutionError(bytes32 transactionHash, bytes errorData)', {\n            transactionHash,\n            errorData,\n        });\n    }\n}\nexports.TransactionExecutionError = TransactionExecutionError;\nclass TransactionGasPriceError extends revert_error_1.RevertError {\n    constructor(transactionHash, actualGasPrice, requiredGasPrice) {\n        super('TransactionGasPriceError', 'TransactionGasPriceError(bytes32 transactionHash, uint256 actualGasPrice, uint256 requiredGasPrice)', {\n            transactionHash,\n            actualGasPrice,\n            requiredGasPrice,\n        });\n    }\n}\nexports.TransactionGasPriceError = TransactionGasPriceError;\nclass TransactionInvalidContextError extends revert_error_1.RevertError {\n    constructor(transactionHash, currentContextAddress) {\n        super('TransactionInvalidContextError', 'TransactionInvalidContextError(bytes32 transactionHash, address currentContextAddress)', {\n            transactionHash,\n            currentContextAddress,\n        });\n    }\n}\nexports.TransactionInvalidContextError = TransactionInvalidContextError;\nclass IncompleteFillError extends revert_error_1.RevertError {\n    constructor(error, expectedAssetFillAmount, actualAssetFillAmount) {\n        super('IncompleteFillError', 'IncompleteFillError(uint8 error, uint256 expectedAssetFillAmount, uint256 actualAssetFillAmount)', {\n            error,\n            expectedAssetFillAmount,\n            actualAssetFillAmount,\n        });\n    }\n}\nexports.IncompleteFillError = IncompleteFillError;\nclass ExchangeInvalidContextError extends revert_error_1.RevertError {\n    constructor(error, orderHash, contextAddress) {\n        super('ExchangeInvalidContextError', 'ExchangeInvalidContextError(uint8 error, bytes32 orderHash, address contextAddress)', { error, orderHash, contextAddress });\n    }\n}\nexports.ExchangeInvalidContextError = ExchangeInvalidContextError;\nclass PayProtocolFeeError extends revert_error_1.RevertError {\n    constructor(orderHash, protocolFee, makerAddress, takerAddress, errorData) {\n        super('PayProtocolFeeError', 'PayProtocolFeeError(bytes32 orderHash, uint256 protocolFee, address makerAddress, address takerAddress, bytes errorData)', { orderHash, protocolFee, makerAddress, takerAddress, errorData });\n    }\n}\nexports.PayProtocolFeeError = PayProtocolFeeError;\nconst types = [\n    AssetProxyExistsError,\n    AssetProxyDispatchError,\n    AssetProxyTransferError,\n    BatchMatchOrdersError,\n    EIP1271SignatureError,\n    ExchangeInvalidContextError,\n    FillError,\n    IncompleteFillError,\n    NegativeSpreadError,\n    OrderEpochError,\n    OrderStatusError,\n    PayProtocolFeeError,\n    SignatureError,\n    SignatureValidatorNotApprovedError,\n    SignatureWalletError,\n    TransactionError,\n    TransactionExecutionError,\n    TransactionGasPriceError,\n    TransactionInvalidContextError,\n];\n// Register the types we've defined.\nfor (const type of types) {\n    revert_error_1.RevertError.registerType(type);\n}\n//# sourceMappingURL=revert_errors.js.map"]},"metadata":{},"sourceType":"module"}