{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst _ = require(\"lodash\");\n\nconst calldata_1 = require(\"../calldata/calldata\");\n\nconst raw_calldata_1 = require(\"../calldata/raw_calldata\");\n\nconst constants_1 = require(\"../utils/constants\");\n\nclass DataType {\n  constructor(dataItem, factory) {\n    this._dataItem = dataItem;\n    this._factory = factory;\n  }\n\n  getDataItem() {\n    return this._dataItem;\n  }\n\n  getFactory() {\n    return this._factory;\n  }\n\n  encode(value, rules, selector) {\n    const rules_ = Object.assign({}, constants_1.constants.DEFAULT_ENCODING_RULES, rules);\n    const calldata = new calldata_1.Calldata(rules_);\n\n    if (selector !== undefined) {\n      calldata.setSelector(selector);\n    }\n\n    const block = this.generateCalldataBlock(value);\n    calldata.setRoot(block);\n    const encodedCalldata = calldata.toString();\n    return encodedCalldata;\n  }\n\n  decode(calldata, rules, selector) {\n    if (selector !== undefined && !_.startsWith(calldata, selector)) {\n      throw new Error(`Tried to decode calldata, but it was missing the function selector. Expected prefix '${selector}'. Got '${calldata}'.`);\n    }\n\n    const hasSelector = selector !== undefined;\n    const rawCalldata = new raw_calldata_1.RawCalldata(calldata, hasSelector);\n    const rules_ = Object.assign({}, constants_1.constants.DEFAULT_DECODING_RULES, rules);\n    const value = rules_.isStrictMode || rawCalldata.getSizeInBytes() > 0 ? this.generateValue(rawCalldata, rules_) : this.getDefaultValue(rules_);\n    return value;\n  }\n\n  decodeAsArray(returndata, rules) {\n    const value = this.decode(returndata, rules);\n    const valuesAsArray = _.isObject(value) ? _.values(value) : [value];\n    return valuesAsArray;\n  }\n\n  getSignature(isDetailed) {\n    if (_.isEmpty(this._dataItem.name) || !isDetailed) {\n      return this.getSignatureType();\n    }\n\n    const name = this.getDataItem().name;\n    const lastIndexOfScopeDelimiter = name.lastIndexOf('.');\n    const isScopedName = lastIndexOfScopeDelimiter !== undefined && lastIndexOfScopeDelimiter > 0;\n    const shortName = isScopedName ? name.substr(lastIndexOfScopeDelimiter + 1) : name;\n    const detailedSignature = `${shortName} ${this.getSignatureType()}`;\n    return detailedSignature;\n  }\n\n}\n\nexports.DataType = DataType;","map":{"version":3,"sources":["../../../../src/abi_encoder/abstract_data_types/data_type.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nconst calldata_1 = require(\"../calldata/calldata\");\nconst raw_calldata_1 = require(\"../calldata/raw_calldata\");\nconst constants_1 = require(\"../utils/constants\");\nclass DataType {\n    constructor(dataItem, factory) {\n        this._dataItem = dataItem;\n        this._factory = factory;\n    }\n    getDataItem() {\n        return this._dataItem;\n    }\n    getFactory() {\n        return this._factory;\n    }\n    encode(value, rules, selector) {\n        const rules_ = Object.assign({}, constants_1.constants.DEFAULT_ENCODING_RULES, rules);\n        const calldata = new calldata_1.Calldata(rules_);\n        if (selector !== undefined) {\n            calldata.setSelector(selector);\n        }\n        const block = this.generateCalldataBlock(value);\n        calldata.setRoot(block);\n        const encodedCalldata = calldata.toString();\n        return encodedCalldata;\n    }\n    decode(calldata, rules, selector) {\n        if (selector !== undefined && !_.startsWith(calldata, selector)) {\n            throw new Error(`Tried to decode calldata, but it was missing the function selector. Expected prefix '${selector}'. Got '${calldata}'.`);\n        }\n        const hasSelector = selector !== undefined;\n        const rawCalldata = new raw_calldata_1.RawCalldata(calldata, hasSelector);\n        const rules_ = Object.assign({}, constants_1.constants.DEFAULT_DECODING_RULES, rules);\n        const value = rules_.isStrictMode || rawCalldata.getSizeInBytes() > 0\n            ? this.generateValue(rawCalldata, rules_)\n            : this.getDefaultValue(rules_);\n        return value;\n    }\n    decodeAsArray(returndata, rules) {\n        const value = this.decode(returndata, rules);\n        const valuesAsArray = _.isObject(value) ? _.values(value) : [value];\n        return valuesAsArray;\n    }\n    getSignature(isDetailed) {\n        if (_.isEmpty(this._dataItem.name) || !isDetailed) {\n            return this.getSignatureType();\n        }\n        const name = this.getDataItem().name;\n        const lastIndexOfScopeDelimiter = name.lastIndexOf('.');\n        const isScopedName = lastIndexOfScopeDelimiter !== undefined && lastIndexOfScopeDelimiter > 0;\n        const shortName = isScopedName ? name.substr(lastIndexOfScopeDelimiter + 1) : name;\n        const detailedSignature = `${shortName} ${this.getSignatureType()}`;\n        return detailedSignature;\n    }\n}\nexports.DataType = DataType;\n//# sourceMappingURL=data_type.js.map"]},"metadata":{},"sourceType":"module"}