{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nfunction useAsync(req) {\n  _s();\n\n  const [state, setState] = useState({\n    pending: false,\n    error: null,\n    data: null\n  });\n\n  async function call(params) {\n    setState(state => ({ ...state,\n      pending: true,\n      data: null,\n      error: null\n    }));\n\n    try {\n      const data = await req(params);\n      setState(state => ({ ...state,\n        pending: false,\n        data\n      }));\n      return {\n        data\n      };\n    } catch (error) {\n      setState(state => ({ ...state,\n        pending: false,\n        error\n      }));\n      return {\n        error\n      };\n    }\n  }\n\n  return { ...state,\n    call\n  };\n}\n\n_s(useAsync, \"MQt6yEMaDvZtgWHVliVx1oCOIaE=\");\n\nexport default useAsync;","map":{"version":3,"sources":["/Users/kelvinho/Documents/Coding/HoHey-main 4 2/hoheywebsite/client/src/components/useAsync.tsx"],"names":["useState","useAsync","req","state","setState","pending","error","data","call","params"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAiBA,SAASC,QAAT,CACEC,GADF,EAE8B;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAkB;AAClDK,IAAAA,OAAO,EAAE,KADyC;AAElDC,IAAAA,KAAK,EAAE,IAF2C;AAGlDC,IAAAA,IAAI,EAAE;AAH4C,GAAlB,CAAlC;;AAMA,iBAAeC,IAAf,CAAoBC,MAApB,EAAqE;AACnEL,IAAAA,QAAQ,CAAED,KAAD,KAAY,EACnB,GAAGA,KADgB;AAEnBE,MAAAA,OAAO,EAAE,IAFU;AAGnBE,MAAAA,IAAI,EAAE,IAHa;AAInBD,MAAAA,KAAK,EAAE;AAJY,KAAZ,CAAD,CAAR;;AAOA,QAAI;AACF,YAAMC,IAAI,GAAG,MAAML,GAAG,CAACO,MAAD,CAAtB;AAEAL,MAAAA,QAAQ,CAAED,KAAD,KAAY,EACnB,GAAGA,KADgB;AAEnBE,QAAAA,OAAO,EAAE,KAFU;AAGnBE,QAAAA;AAHmB,OAAZ,CAAD,CAAR;AAMA,aAAO;AAAEA,QAAAA;AAAF,OAAP;AACD,KAVD,CAUE,OAAOD,KAAP,EAAc;AACdF,MAAAA,QAAQ,CAAED,KAAD,KAAY,EACnB,GAAGA,KADgB;AAEnBE,QAAAA,OAAO,EAAE,KAFU;AAGnBC,QAAAA;AAHmB,OAAZ,CAAD,CAAR;AAMA,aAAO;AAAEA,QAAAA;AAAF,OAAP;AACD;AACF;;AAED,SAAO,EACL,GAAGH,KADE;AAELK,IAAAA;AAFK,GAAP;AAID;;GA1CQP,Q;;AA4CT,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\n\ninterface State<Response> {\n  pending: boolean;\n  error: Error | null;\n  data: Response | null;\n}\n\ninterface CallResponse<Response> {\n  data?: Response;\n  error?: Error;\n}\n\ninterface UseAsync<Params, Response> extends State<Response> {\n  call: (params: Params) => Promise<CallResponse<Response>>;\n}\n\nfunction useAsync<Params, Response>(\n  req: (params: Params) => Promise<Response>\n): UseAsync<Params, Response> {\n  const [state, setState] = useState<State<Response>>({\n    pending: false,\n    error: null,\n    data: null,\n  });\n\n  async function call(params: Params): Promise<CallResponse<Response>> {\n    setState((state) => ({\n      ...state,\n      pending: true,\n      data: null,\n      error: null,\n    }));\n\n    try {\n      const data = await req(params);\n\n      setState((state) => ({\n        ...state,\n        pending: false,\n        data,\n      }));\n\n      return { data };\n    } catch (error) {\n      setState((state) => ({\n        ...state,\n        pending: false,\n        error,\n      }));\n\n      return { error };\n    }\n  }\n\n  return {\n    ...state,\n    call,\n  };\n}\n\nexport default useAsync;\n\n"]},"metadata":{},"sourceType":"module"}