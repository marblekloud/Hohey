{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst chalk_1 = require(\"chalk\");\n\nconst _ = require(\"lodash\");\n\nconst DEFAULT_TERMINAL_WIDTH = 80;\nconst TERMINAL_WIDTH = _.get(process, 'stdout.columns') || DEFAULT_TERMINAL_WIDTH;\nexports.logUtils = {\n  log(...args) {\n    console.log(...args); // tslint:disable-line:no-console\n  },\n\n  header(text, padStr = '=') {\n    const padLength = TERMINAL_WIDTH - text.length;\n    const padLengthEnd = (padLength + 1) / 2;\n    const leftPadded = text.padStart(TERMINAL_WIDTH - padLengthEnd, padStr);\n    const padded = leftPadded.padEnd(TERMINAL_WIDTH, padStr);\n    console.log(padded); // tslint:disable-line:no-console\n  },\n\n  warn(...args) {\n    console.warn(...args); // tslint:disable-line:no-console\n  },\n\n  table(columnarData) {\n    const formattedColumnarData = _.mapValues(columnarData, (columnOrColumns, _rowName) => _.isNumber(columnOrColumns) ? columnOrColumns.toLocaleString() : columnOrColumns);\n\n    console.table(formattedColumnarData); // tslint:disable-line:no-console\n  },\n\n  logWithTime(arg) {\n    exports.logUtils.log(`[${chalk_1.default.gray(new Date().toLocaleTimeString())}] ${arg}`);\n  }\n\n};","map":{"version":3,"sources":["../../src/log_utils.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,MAAA,CAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEA,MAAM,sBAAsB,GAAG,EAA/B;AACA,MAAM,cAAc,GAAG,CAAC,CAAC,GAAF,CAAM,OAAN,EAAe,gBAAf,KAAoC,sBAA3D;AAEa,OAAA,CAAA,QAAA,GAAW;AACpB,EAAA,GAAG,CAAC,GAAG,IAAJ,EAAe;AACd,IAAA,OAAO,CAAC,GAAR,CAAY,GAAG,IAAf,EADc,CACQ;AACzB,GAHmB;;AAIpB,EAAA,MAAM,CAAC,IAAD,EAAe,MAAA,GAAiB,GAAhC,EAAmC;AACrC,UAAM,SAAS,GAAG,cAAc,GAAG,IAAI,CAAC,MAAxC;AACA,UAAM,YAAY,GAAG,CAAC,SAAS,GAAG,CAAb,IAAkB,CAAvC;AACA,UAAM,UAAU,GAAG,IAAI,CAAC,QAAL,CAAc,cAAc,GAAG,YAA/B,EAA6C,MAA7C,CAAnB;AACA,UAAM,MAAM,GAAG,UAAU,CAAC,MAAX,CAAkB,cAAlB,EAAkC,MAAlC,CAAf;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,MAAZ,EALqC,CAKhB;AACxB,GAVmB;;AAWpB,EAAA,IAAI,CAAC,GAAG,IAAJ,EAAe;AACf,IAAA,OAAO,CAAC,IAAR,CAAa,GAAG,IAAhB,EADe,CACQ;AAC1B,GAbmB;;AAcpB,EAAA,KAAK,CAAC,YAAD,EAAyC;AAC1C,UAAM,qBAAqB,GAAG,CAAC,CAAC,SAAF,CAAY,YAAZ,EAA0B,CAAC,eAAD,EAAuB,QAAvB,KACpD,CAAC,CAAC,QAAF,CAAW,eAAX,IAA8B,eAAe,CAAC,cAAhB,EAA9B,GAAiE,eADvC,CAA9B;;AAGA,IAAA,OAAO,CAAC,KAAR,CAAc,qBAAd,EAJ0C,CAIJ;AACzC,GAnBmB;;AAoBpB,EAAA,WAAW,CAAC,GAAD,EAAY;AACnB,IAAA,OAAA,CAAA,QAAA,CAAS,GAAT,CAAa,IAAI,OAAA,CAAA,OAAA,CAAM,IAAN,CAAW,IAAI,IAAJ,GAAW,kBAAX,EAAX,CAA2C,KAAK,GAAG,EAApE;AACH;;AAtBmB,CAAX","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst chalk_1 = require(\"chalk\");\nconst _ = require(\"lodash\");\nconst DEFAULT_TERMINAL_WIDTH = 80;\nconst TERMINAL_WIDTH = _.get(process, 'stdout.columns') || DEFAULT_TERMINAL_WIDTH;\nexports.logUtils = {\n    log(...args) {\n        console.log(...args); // tslint:disable-line:no-console\n    },\n    header(text, padStr = '=') {\n        const padLength = TERMINAL_WIDTH - text.length;\n        const padLengthEnd = (padLength + 1) / 2;\n        const leftPadded = text.padStart(TERMINAL_WIDTH - padLengthEnd, padStr);\n        const padded = leftPadded.padEnd(TERMINAL_WIDTH, padStr);\n        console.log(padded); // tslint:disable-line:no-console\n    },\n    warn(...args) {\n        console.warn(...args); // tslint:disable-line:no-console\n    },\n    table(columnarData) {\n        const formattedColumnarData = _.mapValues(columnarData, (columnOrColumns, _rowName) => _.isNumber(columnOrColumns) ? columnOrColumns.toLocaleString() : columnOrColumns);\n        console.table(formattedColumnarData); // tslint:disable-line:no-console\n    },\n    logWithTime(arg) {\n        exports.logUtils.log(`[${chalk_1.default.gray(new Date().toLocaleTimeString())}] ${arg}`);\n    },\n};\n//# sourceMappingURL=log_utils.js.map"]},"metadata":{},"sourceType":"module"}