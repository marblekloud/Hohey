{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst revert_error_1 = require(\"../../revert_error\"); // tslint:disable:max-classes-per-file\n\n\nclass OnlyOwnerError extends revert_error_1.RevertError {\n  constructor(sender, owner) {\n    super('OnlyOwnerError', 'OnlyOwnerError(address sender, address owner)', {\n      sender,\n      owner\n    });\n  }\n\n}\n\nexports.OnlyOwnerError = OnlyOwnerError;\n\nclass TransferOwnerToZeroError extends revert_error_1.RevertError {\n  constructor() {\n    super('TransferOwnerToZeroError', 'TransferOwnerToZeroError()', {});\n  }\n\n}\n\nexports.TransferOwnerToZeroError = TransferOwnerToZeroError;\nconst types = [OnlyOwnerError, TransferOwnerToZeroError]; // Register the types we've defined.\n\nfor (const type of types) {\n  revert_error_1.RevertError.registerType(type);\n}","map":{"version":3,"sources":["../../../../src/revert_errors/utils/ownable_revert_errors.ts"],"names":[],"mappings":";;;;;;AAAA,MAAA,cAAA,GAAA,OAAA,CAAA,oBAAA,CAAA,C,CAEA;;;AACA,MAAa,cAAb,SAAoC,cAAA,CAAA,WAApC,CAA+C;AAC3C,EAAA,WAAA,CAAY,MAAZ,EAA6B,KAA7B,EAA2C;AACvC,UAAM,gBAAN,EAAwB,+CAAxB,EAAyE;AACrE,MAAA,MADqE;AAErE,MAAA;AAFqE,KAAzE;AAIH;;AAN0C;;AAA/C,OAAA,CAAA,cAAA,GAAA,cAAA;;AASA,MAAa,wBAAb,SAA8C,cAAA,CAAA,WAA9C,CAAyD;AACrD,EAAA,WAAA,GAAA;AACI,UAAM,0BAAN,EAAkC,4BAAlC,EAAgE,EAAhE;AACH;;AAHoD;;AAAzD,OAAA,CAAA,wBAAA,GAAA,wBAAA;AAMA,MAAM,KAAK,GAAG,CAAC,cAAD,EAAiB,wBAAjB,CAAd,C,CAEA;;AACA,KAAK,MAAM,IAAX,IAAmB,KAAnB,EAA0B;AACtB,EAAA,cAAA,CAAA,WAAA,CAAY,YAAZ,CAAyB,IAAzB;AACH","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst revert_error_1 = require(\"../../revert_error\");\n// tslint:disable:max-classes-per-file\nclass OnlyOwnerError extends revert_error_1.RevertError {\n    constructor(sender, owner) {\n        super('OnlyOwnerError', 'OnlyOwnerError(address sender, address owner)', {\n            sender,\n            owner,\n        });\n    }\n}\nexports.OnlyOwnerError = OnlyOwnerError;\nclass TransferOwnerToZeroError extends revert_error_1.RevertError {\n    constructor() {\n        super('TransferOwnerToZeroError', 'TransferOwnerToZeroError()', {});\n    }\n}\nexports.TransferOwnerToZeroError = TransferOwnerToZeroError;\nconst types = [OnlyOwnerError, TransferOwnerToZeroError];\n// Register the types we've defined.\nfor (const type of types) {\n    revert_error_1.RevertError.registerType(type);\n}\n//# sourceMappingURL=ownable_revert_errors.js.map"]},"metadata":{},"sourceType":"module"}