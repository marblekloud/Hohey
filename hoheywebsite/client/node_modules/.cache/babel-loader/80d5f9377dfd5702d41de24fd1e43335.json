{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst revert_error_1 = require(\"../../revert_error\"); // tslint:disable:max-classes-per-file\n\n\nclass DivisionByZeroError extends revert_error_1.RevertError {\n  constructor() {\n    super('DivisionByZeroError', 'DivisionByZeroError()', {});\n  }\n\n}\n\nexports.DivisionByZeroError = DivisionByZeroError;\n\nclass RoundingError extends revert_error_1.RevertError {\n  constructor(numerator, denominator, target) {\n    super('RoundingError', 'RoundingError(uint256 numerator, uint256 denominator, uint256 target)', {\n      numerator,\n      denominator,\n      target\n    });\n  }\n\n}\n\nexports.RoundingError = RoundingError;\nconst types = [DivisionByZeroError, RoundingError]; // Register the types we've defined.\n\nfor (const type of types) {\n  revert_error_1.RevertError.registerType(type);\n}","map":{"version":3,"sources":["../../../../src/revert_errors/exchange-libs/lib_math_revert_errors.ts"],"names":[],"mappings":";;;;;;AAGA,MAAA,cAAA,GAAA,OAAA,CAAA,oBAAA,CAAA,C,CAEA;;;AAEA,MAAa,mBAAb,SAAyC,cAAA,CAAA,WAAzC,CAAoD;AAChD,EAAA,WAAA,GAAA;AACI,UAAM,qBAAN,EAA6B,uBAA7B,EAAsD,EAAtD;AACH;;AAH+C;;AAApD,OAAA,CAAA,mBAAA,GAAA,mBAAA;;AAMA,MAAa,aAAb,SAAmC,cAAA,CAAA,WAAnC,CAA8C;AAC1C,EAAA,WAAA,CACI,SADJ,EAEI,WAFJ,EAGI,MAHJ,EAGwC;AAEpC,UAAM,eAAN,EAAuB,uEAAvB,EAAgG;AAC5F,MAAA,SAD4F;AAE5F,MAAA,WAF4F;AAG5F,MAAA;AAH4F,KAAhG;AAKH;;AAXyC;;AAA9C,OAAA,CAAA,aAAA,GAAA,aAAA;AAcA,MAAM,KAAK,GAAG,CAAC,mBAAD,EAAsB,aAAtB,CAAd,C,CAEA;;AACA,KAAK,MAAM,IAAX,IAAmB,KAAnB,EAA0B;AACtB,EAAA,cAAA,CAAA,WAAA,CAAY,YAAZ,CAAyB,IAAzB;AACH","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst revert_error_1 = require(\"../../revert_error\");\n// tslint:disable:max-classes-per-file\nclass DivisionByZeroError extends revert_error_1.RevertError {\n    constructor() {\n        super('DivisionByZeroError', 'DivisionByZeroError()', {});\n    }\n}\nexports.DivisionByZeroError = DivisionByZeroError;\nclass RoundingError extends revert_error_1.RevertError {\n    constructor(numerator, denominator, target) {\n        super('RoundingError', 'RoundingError(uint256 numerator, uint256 denominator, uint256 target)', {\n            numerator,\n            denominator,\n            target,\n        });\n    }\n}\nexports.RoundingError = RoundingError;\nconst types = [DivisionByZeroError, RoundingError];\n// Register the types we've defined.\nfor (const type of types) {\n    revert_error_1.RevertError.registerType(type);\n}\n//# sourceMappingURL=lib_math_revert_errors.js.map"]},"metadata":{},"sourceType":"module"}